"use strict";(self.webpackChunkdwcj_documentation=self.webpackChunkdwcj_documentation||[]).push([[6604],{37910:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>r,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"components/option-dialogs/file-save","title":"File Save","description":"FileSaveDialog is a modal dialog designed to allow users to save a file to a specified location on the server file system. The dialog blocks app execution until the user provides a filename and confirms the action or cancels the dialog.","source":"@site/docs/components/option-dialogs/file-save.md","sourceDirName":"components/option-dialogs","slug":"/components/option-dialogs/file-save","permalink":"/docs/components/option-dialogs/file-save","draft":false,"unlisted":false,"editUrl":"https://github.com/webforj/webforj-docs/tree/website/docs/components/option-dialogs/file-save.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7,"title":"File Save"},"sidebar":"documentationSidebar","previous":{"title":"File Upload","permalink":"/docs/components/option-dialogs/file-upload"},"next":{"title":"Table","permalink":"/docs/components/table/"}}');var o=s(74848),t=s(28453);const l={sidebar_position:7,title:"File Save"},a="File Save Dialog",r={},d=[{value:"Usages",id:"usages",level:2},{value:"Result",id:"result",level:2},{value:"Exists action",id:"exists-action",level:2},{value:"Selection mode",id:"selection-mode",level:2},{value:"Initial path",id:"initial-path",level:2},{value:"Restriction",id:"restriction",level:2},{value:"Filename",id:"filename",level:2},{value:"Internationalization (i18n)",id:"internationalization-i18n",level:2},{value:"Filters",id:"filters",level:2},{value:"Custom filters",id:"custom-filters",level:3},{value:"Best practices",id:"best-practices",level:2}];function c(e){const i={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components},{ComponentDemo:s,DocChip:n,JavadocLink:l}=i;return s||u("ComponentDemo",!0),n||u("DocChip",!0),l||u("JavadocLink",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.header,{children:(0,o.jsx)(i.h1,{id:"file-save-dialog",children:"File Save Dialog"})}),"\n",(0,o.jsx)(n,{chip:"shadow"}),"\n",(0,o.jsx)(l,{type:"foundation",location:"com/webforj/component/optiondialog/FileSaveDialog",top:"true"}),"\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.code,{children:"FileSaveDialog"})," is a modal dialog designed to allow users to save a file to a specified location on the server file system. The dialog blocks app execution until the user provides a filename and confirms the action or cancels the dialog."]}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-java",children:'OptionDialog.showFileSaveDialog("Save your file");\n'})}),"\n",(0,o.jsx)(i.h2,{id:"usages",children:"Usages"}),"\n",(0,o.jsxs)(i.p,{children:["The ",(0,o.jsx)(i.code,{children:"FileSaveDialog"})," provides a streamlined method for saving files to the file system, offering user-configurable options for file naming and handling existing files."]}),"\n",(0,o.jsx)(s,{path:"https://demo.webforj.com/webapp/controlsamples/filesavedialogbasic?",javaE:"https://raw.githubusercontent.com/webforj/webforj-docs-samples/refs/heads/main/src/main/java/com/webforj/samples/views/optiondialog/filesave/FileSaveDialogBasicView.java",height:"800px"}),"\n",(0,o.jsx)(i.h2,{id:"result",children:"Result"}),"\n",(0,o.jsxs)(i.p,{children:["The ",(0,o.jsx)(i.code,{children:"FileSaveDialog"})," returns the selected path as a string. If the user cancels the dialog, the result will be ",(0,o.jsx)(i.code,{children:"null"}),"."]}),"\n",(0,o.jsx)(i.admonition,{title:"Dialog Purpose",type:"important",children:(0,o.jsx)(i.p,{children:"This dialog doesn't actually cause any files to be saved but returns the filename the user has selected."})}),"\n",(0,o.jsx)(i.admonition,{type:"info",children:(0,o.jsxs)(i.p,{children:["The resulting string is returned from the ",(0,o.jsx)(i.code,{children:"show()"})," method or the equivalent ",(0,o.jsx)(i.code,{children:"OptionDialog"})," method as demonstrated below."]})}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-java",metastring:"showLineNumbers",children:'String result = OptionDialog.showFileSaveDialog(\n    "Save your file", "/home/user/documents", "report.xls");\n\nif (result != null) {\n  OptionDialog.showMessageDialog("Saved file to: " + path, "Path Selected");\n} else {\n  OptionDialog.showMessageDialog("No path is selected", "Path Selected",\n      MessageDialog.MessageType.ERROR);\n}\n'})}),"\n",(0,o.jsx)(i.h2,{id:"exists-action",children:"Exists action"}),"\n",(0,o.jsxs)(i.p,{children:["The ",(0,o.jsx)(i.code,{children:"FileSaveDialog"})," provides configurable behavior when a file with the specified name already exists:"]}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:"ACCEPT_WITHOUT_ACTION"}),": The selection is accepted with no additional user action."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:"ERROR_DIALOGUE"}),": The user is presented with an error dialog; the selection isn't allowed."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:"CONFIRMATION_DIALOGUE"}),": The user is presented with a dialog requesting confirmation. This is the default."]}),"\n"]}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-java",metastring:"showLineNumbers",children:'FileSaveDialog dialog = new FileSaveDialog(\n  "Save your file", "/home/user/documents", "report.xls");\ndialog.setExistsAction(FileSaveDialog.ExistsAction.ERROR_DIALOGUE);\nString result = dialog.show();\n'})}),"\n",(0,o.jsx)(i.h2,{id:"selection-mode",children:"Selection mode"}),"\n",(0,o.jsxs)(i.p,{children:["The ",(0,o.jsx)(i.code,{children:"FileSaveDialog"})," supports different selection modes, allowing you to tailor the selection method to your specific needs:"]}),"\n",(0,o.jsxs)(i.ol,{children:["\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:"FILES"}),": Allows the selection of files only."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:"DIRECTORIES"}),": Allows the selection of directories only."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:"FILES_AND_DIRECTORIES"}),": Allows the selection of both files and directories."]}),"\n"]}),"\n",(0,o.jsx)(i.h2,{id:"initial-path",children:"Initial path"}),"\n",(0,o.jsx)(i.p,{children:"Specify the directory where the dialog will open using the initial path. This helps users start in a logical directory for their save operation."}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-java",metastring:"showLineNumbers",children:'FileSaveDialog dialog = new FileSaveDialog(\n  "Save your file", "/home/user/documents", "report.xls");\nString result = dialog.show();\n'})}),"\n",(0,o.jsx)(i.h2,{id:"restriction",children:"Restriction"}),"\n",(0,o.jsxs)(i.p,{children:["You can restrict the dialog to a specific directory, preventing users from navigating outside of it using the ",(0,o.jsx)(i.code,{children:"setRestricted(boolean restricted)"})," method."]}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-java",metastring:"showLineNumbers",children:'FileSaveDialog dialog = new FileSaveDialog(\n  "Save your file", "/home/user/documents", "report.xls");\ndialog.setRestricted(true);\ndialog.show();\n'})}),"\n",(0,o.jsx)(i.h2,{id:"filename",children:"Filename"}),"\n",(0,o.jsx)(i.p,{children:"Set a default filename for the save operation to guide users and minimize errors."}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-java",metastring:"showLineNumbers",children:'FileSaveDialog dialog = new FileSaveDialog("Save your file");\ndialog.setName("report.xls");\nString result = dialog.show();\n'})}),"\n",(0,o.jsx)(i.h2,{id:"internationalization-i18n",children:"Internationalization (i18n)"}),"\n",(0,o.jsxs)(i.p,{children:["The titles, descriptions, labels, and messages within the component are fully customizable using the ",(0,o.jsx)(i.code,{children:"FileSaveI18n"})," class. This ensures the dialog can be tailored to various localization or personalization requirements."]}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-java",metastring:"showLineNumbers",children:'FileSaveDialog dialog = new FileSaveDialog("Speichern Sie Ihre Datei");\nFileChooserI18n i18n = new FileChooserI18n();\ni18n.setChoose("W\xe4hlen");\ni18n.setCancel("Stornieren");\ndialog.setI18n(i18n);\n'})}),"\n",(0,o.jsx)(i.h2,{id:"filters",children:"Filters"}),"\n",(0,o.jsxs)(i.p,{children:["The ",(0,o.jsx)(i.code,{children:"FileSaveDialog"})," allows you to set filters to limit the types of files that can be saved using the ",(0,o.jsx)(i.code,{children:"setFilters(List<FileSaveFilter> filters)"})," method."]}),"\n",(0,o.jsx)(s,{path:"https://demo.webforj.com/webapp/controlsamples/filesavedialogfilters?",javaE:"https://raw.githubusercontent.com/webforj/webforj-docs-samples/refs/heads/main/src/main/java/com/webforj/samples/views/optiondialog/filesave/FileSaveDialogFiltersView.java",height:"800px"}),"\n",(0,o.jsx)(i.h3,{id:"custom-filters",children:"Custom filters"}),"\n",(0,o.jsxs)(i.p,{children:["You can enable custom filters to allow users to define their own file filters using the ",(0,o.jsx)(i.code,{children:"setCustomFilters(boolean customFilters)"})," method. Filters are saved in local storage by default and restored on subsequent dialog invocations."]}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-java",metastring:"showLineNumbers",children:'FileSaveDialog dialog = new FileSaveDialog("Save your file", "/home/user/documents");\ndialog.setCustomFilters(true);\nString result = dialog.show();\n'})}),"\n",(0,o.jsx)(i.h2,{id:"best-practices",children:"Best practices"}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:"Predefined File Names"}),": Provide a logical default filename where applicable."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:"Confirm Overwrites"}),": Use ",(0,o.jsx)(i.code,{children:"CONFIRMATION_DIALOGUE"})," for ",(0,o.jsx)(i.code,{children:"ExistsAction"})," to prevent accidental overwrites."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:"Intuitive Initial Path"}),": Set an initial path that aligns with user expectations."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:"Internationalization"}),": Customize dialog text to enhance usability for international audiences."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:"File Type Filters"}),": Leverage filters to restrict file types and guide users towards valid file extensions."]}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,o.jsx)(i,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}function u(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},28453:(e,i,s)=>{s.d(i,{R:()=>l,x:()=>a});var n=s(96540);const o={},t=n.createContext(o);function l(e){const i=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),n.createElement(t.Provider,{value:i},e.children)}}}]);