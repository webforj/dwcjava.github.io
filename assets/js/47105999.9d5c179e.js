"use strict";(self.webpackChunkdwcj_documentation=self.webpackChunkdwcj_documentation||[]).push([[3703],{72528:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"testing/e2e/playwright","title":"Testing with Playwright","description":"This documentation outlines the process for testing webforJ applications using Playwright, specifically focusing on the HelloWorldView from the webforj-archetype-hello-world.","source":"@site/docs/testing/e2e/playwright.md","sourceDirName":"testing/e2e","slug":"/testing/e2e/playwright","permalink":"/docs/testing/e2e/playwright","draft":false,"unlisted":false,"editUrl":"https://github.com/webforj/webforj-docs/tree/website/docs/testing/e2e/playwright.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Testing with Playwright"},"sidebar":"documentationSidebar","previous":{"title":"End-to-End (E2E) Testing","permalink":"/docs/testing/e2e/overview"},"next":{"title":"Testing with Selenium","permalink":"/docs/testing/e2e/selenium"}}');var s=i(74848),r=i(28453);const l={sidebar_position:2,title:"Testing with Playwright"},o=void 0,c={},a=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Maven configuration",id:"maven-configuration",level:2},{value:"Testing example: <code>HelloWorldView</code>",id:"testing-example-helloworldview",level:2},{value:"Key steps",id:"key-steps",level:3},{value:"Running tests",id:"running-tests",level:3},{value:"Expected behavior",id:"expected-behavior",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["This documentation outlines the process for testing webforJ applications using Playwright, specifically focusing on the ",(0,s.jsx)(n.code,{children:"HelloWorldView"})," from the ",(0,s.jsx)(n.code,{children:"webforj-archetype-hello-world"}),"."]}),"\n",(0,s.jsx)(n.admonition,{title:"App Basics",type:"info",children:(0,s.jsxs)(n.p,{children:["To learn more about the ",(0,s.jsx)(n.code,{children:"webforj-archetype-hello-world"}),", refer to the ",(0,s.jsx)(n.a,{href:"../../introduction/basics",children:"App Basics Introduction"})," section."]})}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsx)(n.p,{children:"Before writing and running the Playwright tests, ensure the following:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The webforJ app is correctly set up and running on your local server."}),"\n",(0,s.jsxs)(n.li,{children:["You have installed:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Playwright Java bindings."}),"\n",(0,s.jsx)(n.li,{children:"A compatible browser (Playwright can automatically install browsers during setup)."}),"\n",(0,s.jsx)(n.li,{children:"Maven for project dependencies."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"maven-configuration",children:"Maven configuration"}),"\n",(0,s.jsxs)(n.p,{children:["Add the necessary dependencies in your ",(0,s.jsx)(n.code,{children:"pom.xml"})," for Playwright:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",metastring:'title="pom.xml"',children:"<dependencies>\n  <dependency>\n    <groupId>com.microsoft.playwright</groupId>\n    <artifactId>playwright</artifactId>\n    <version>1.49.0</version>\n    <scope>test</scope>\n  </dependency>\n  <dependency>\n    <groupId>org.junit.jupiter</groupId>\n    <artifactId>junit-jupiter-api</artifactId>\n    <scope>test</scope>\n  </dependency>\n</dependencies>\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"testing-example-helloworldview",children:["Testing example: ",(0,s.jsx)(n.code,{children:"HelloWorldView"})]}),"\n",(0,s.jsxs)(n.p,{children:["The following code demonstrates a Playwright based test for the ",(0,s.jsx)(n.code,{children:"HelloWorldView"})," component."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",metastring:'title="HelloWorldViewTest.java"',children:'package com.example.views;\n\nimport static com.microsoft.playwright.assertions.PlaywrightAssertions.assertThat;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport com.microsoft.playwright.Browser;\nimport com.microsoft.playwright.BrowserType;\nimport com.microsoft.playwright.Page;\nimport com.microsoft.playwright.Playwright;\n\nclass HelloWorldViewTest {\n\n  static Playwright playwright = Playwright.create();\n  Browser browser;\n  Page page;\n  String port = System.getProperty("server.port", "8080");\n\n  @BeforeEach\n  void setUp() {\n    browser = playwright.chromium().launch(); \n    page = browser.newPage();\n    page.navigate("http://localhost:" + port + "/");\n  }\n\n  @Test\n  void shouldClickButton() {\n    page.locator("input").fill("webforJ");\n    page.getByText("Say Hello").click();\n\n    assertThat(page.locator("dwc-toast").first())\n        .containsText("Welcome to webforJ Starter webforJ!");\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"key-steps",children:"Key steps"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Initialize Playwright"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Create a ",(0,s.jsx)(n.code,{children:"Playwright"})," instance."]}),"\n",(0,s.jsxs)(n.li,{children:["Launch a browser instance using ",(0,s.jsx)(n.code,{children:"playwright.chromium().launch()"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Set Up Test Environment"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Open a new browser page with ",(0,s.jsx)(n.code,{children:"browser.newPage()"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Navigate to the ",(0,s.jsx)(n.code,{children:"HelloWorldView"})," page using the ",(0,s.jsx)(n.code,{children:"navigate"})," method."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Interact with Elements"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Use ",(0,s.jsx)(n.a,{href:"https://playwright.dev/java/docs/api/class-locator",children:"Playwright's locators"})," to interact with DOM elements."]}),"\n",(0,s.jsxs)(n.li,{children:["Fill input fields using ",(0,s.jsx)(n.code,{children:'locator("input").fill()'})," and trigger actions using ",(0,s.jsx)(n.code,{children:'getByText("Say Hello").click()'}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Assertions"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Verify the displayed toast message with ",(0,s.jsx)(n.code,{children:"PlaywrightAssertions.assertThat()"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Teardown"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Playwright automatically handles browser cleanup when the test finishes. For manual cleanup, you can close the browser using ",(0,s.jsx)(n.code,{children:"browser.close()"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"running-tests",children:"Running tests"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Start the webforJ server:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"mvn jetty:run\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Execute the test cases:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"mvn test\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"expected-behavior",children:"Expected behavior"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["On visiting ",(0,s.jsx)(n.code,{children:"http://localhost:<port>/"}),", the ",(0,s.jsx)(n.code,{children:"HelloWorldView"})," page loads."]}),"\n",(0,s.jsxs)(n.li,{children:["Input webforJ into the text field and click the ",(0,s.jsx)(n.code,{children:"Say Hello"})," button."]}),"\n",(0,s.jsxs)(n.li,{children:["A toast message should appear with the text: ",(0,s.jsx)(n.code,{children:"Welcome to webforJ Starter webforJ!"}),"."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var t=i(96540);const s={},r=t.createContext(s);function l(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);