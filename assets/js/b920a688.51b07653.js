"use strict";(self.webpackChunkdwcj_documentation=self.webpackChunkdwcj_documentation||[]).push([[5923],{4545:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var i=n(4848),s=n(8453);const o={sidebar_position:4,title:"Input"},l="Input Dialog",a={id:"components/option-dialogs/input",title:"Input",description:"An InputDialog is a modal dialog designed to prompt the user for input. The dialog blocks app execution until the user provides the input or closes the dialog.",source:"@site/docs/components/option-dialogs/input.md",sourceDirName:"components/option-dialogs",slug:"/components/option-dialogs/input",permalink:"/docs/components/option-dialogs/input",draft:!1,unlisted:!1,editUrl:"https://github.com/webforj/webforj-docs/tree/website/docs/components/option-dialogs/input.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Input"},sidebar:"documentationSidebar",previous:{title:"Confirm",permalink:"/docs/components/option-dialogs/confirm"},next:{title:"File Chooser",permalink:"/docs/components/option-dialogs/file-chooser"}},r={},d=[{value:"Usages",id:"usages",level:2},{value:"Types",id:"types",level:2},{value:"Input types",id:"input-types",level:3},{value:"Message type",id:"message-type",level:3},{value:"Result",id:"result",level:2},{value:"Default value",id:"default-value",level:2},{value:"Timeout",id:"timeout",level:2},{value:"Best practices",id:"best-practices",level:2},{value:"Styling",id:"styling",level:2},{value:"Shadow parts",id:"shadow-parts",level:3},{value:"Reflected attributes",id:"reflected-attributes",level:3}];function c(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components},{ComponentDemo:o,DocChip:l,JavadocLink:a,TableBuilder:r}=t;return o||h("ComponentDemo",!0),l||h("DocChip",!0),a||h("JavadocLink",!0),r||h("TableBuilder",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"input-dialog",children:"Input Dialog"}),"\n",(0,i.jsx)(l,{tooltipText:"This component will render with a shadow DOM, an API built into the browser that facilitates encapsulation.",label:"Shadow",target:"_blank",clickable:!1,iconName:"shadow"}),"\n",(0,i.jsx)(l,{tooltipText:"The name of the web component that will render in the DOM.",label:"dwc-dialog",clickable:!1,iconName:"code"}),"\n",(0,i.jsx)(a,{type:"foundation",location:"com/webforj/component/optiondialog/InputDialog",top:"true"}),"\n",(0,i.jsxs)(t.p,{children:["An ",(0,i.jsx)(t.code,{children:"InputDialog"})," is a modal dialog designed to prompt the user for input. The dialog blocks app execution until the user provides the input or closes the dialog."]}),"\n",(0,i.jsx)(o,{path:"https://demo.webforj.com/webapp/controlsamples/inputdialogbasic?",javaE:"https://raw.githubusercontent.com/webforj/webforj-docs-samples/refs/heads/main/src/main/java/com/webforj/samples/views/optiondialog/input/InputDialogBasicView.java",height:"500px"}),"\n",(0,i.jsx)(t.h2,{id:"usages",children:"Usages"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"InputDialog"})," provides a way to request input from users, such as text, numbers, or other data, ensuring that they provide necessary information before proceeding."]}),"\n",(0,i.jsx)(t.h2,{id:"types",children:"Types"}),"\n",(0,i.jsx)(t.h3,{id:"input-types",children:"Input types"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"InputDialog"})," supports different types of input fields, allowing you to tailor the input method to your specific needs:"]}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"TEXT"}),": A standard single-line text input."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"PASSWORD"}),": A password input field that hides the user's input."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"NUMBER"}),": A numeric input field."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"EMAIL"}),": An input field for email addresses."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"URL"}),": An input field for URLs."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"SEARCH"}),": A search text input field."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"DATE"}),": An input field for selecting dates."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"TIME"}),": An input field for selecting time."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"DATETIME_LOCAL"}),": An input field for selecting local date and time."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"COLOR"}),": An input field for selecting a color."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"message-type",children:"Message type"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"InputDialog"})," supports the following message types. When you configures a type, The dialog displays an icon beside the message, and the dialog's theme updates according to the webforJ design system rules."]}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"PLAIN"}),": Displays the message without an icon, using the default theme."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"ERROR"}),": Displays an error icon next to the message with the error theme applied."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"QUESTION"}),": Displays a question mark icon beside the message, using the primary theme."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"WARNING"}),": Displays a warning icon next to the message with the warning theme applied."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"INFO"}),": Displays an info icon beside the message, using the info theme."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"In the following sample, The user is prompted to enter its password to access the app. If login fails, the user will prompted\nagain."}),"\n",(0,i.jsx)(o,{path:"https://demo.webforj.com/webapp/controlsamples/inputdialogtype?",javaE:"https://raw.githubusercontent.com/webforj/webforj-docs-samples/refs/heads/main/src/main/java/com/webforj/samples/views/optiondialog/input/InputDialogTypeView.java",height:"350px"}),"\n",(0,i.jsx)(t.h2,{id:"result",children:"Result"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"InputDialog"})," returns the user's input as a string. If the user closes the dialog without providing input, the result will be ",(0,i.jsx)(t.code,{children:"null"}),"."]}),"\n",(0,i.jsx)(t.admonition,{type:"important",children:(0,i.jsxs)(t.p,{children:["The resulting string will be returned from the ",(0,i.jsx)(t.code,{children:"show()"})," method, or the equivalent ",(0,i.jsx)(t.code,{children:"OptionDialog"})," method as shown below."]})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",metastring:"showLineNumbers",children:'String result = OptionDialog.showInputDialog(\n    "Please enter your age:", "Age Input", "", InputDialog.InputType.NUMBER);\n\nif (result != null) {\n    OptionDialog.showMessageDialog("You entered: " + result, "Input Received", "OK");\n} else {\n    OptionDialog.showMessageDialog("No input received", "Input Canceled", "OK");\n}\n'})}),"\n",(0,i.jsx)(t.h2,{id:"default-value",children:"Default value"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"InputDialog"})," allows you to specify a default value that appears in the input field when the dialog is displayed. This can provide users with a suggestion or a previously entered value."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",metastring:"showLineNumbers",children:'InputDialog dialog = new InputDialog(\n    "Please enter your name:", "Name Input", "John Doe", InputDialog.InputType.TEXT);\nString result = dialog.show();\n'})}),"\n",(0,i.jsx)(t.h2,{id:"timeout",children:"Timeout"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"InputDialog"})," allows you to set a timeout duration after which the dialog automatically closes. This feature is useful for non-critical input requests or actions that don't require the user's immediate interaction."]}),"\n",(0,i.jsxs)(t.p,{children:["You can configure the timeout for the dialog using the ",(0,i.jsx)(t.code,{children:"setTimeout(int timeout)"})," method. The timeout duration is in seconds. If the specified time elapses without any user interaction, the dialog closes automatically."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",metastring:"showLineNumbers",children:'InputDialog dialog = new InputDialog(\n    "Please enter your name:", "Name Input", "John Doe");\ndialog.setTimeout(5);\nString result = dialog.show();\n\nOptionDialog.showMessageDialog(\n        "You entered: " + result, "Input Received", "OK", MessageDialog.MessageType.INFO);\n'})}),"\n",(0,i.jsx)(t.h2,{id:"best-practices",children:"Best practices"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Clear and Concise Prompts"}),": Ensure the prompt message clearly explains what information the user is being asked to provide."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Appropriate Input Types"}),": Choose input types that match the required data to ensure accurate and relevant user input."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Logical Default Values"}),": Set default values that provide useful suggestions or previous entries to streamline user input."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Judicious Use of Timeout"}),": Set timeouts for non-critical input requests, ensuring users have enough time to provide the required information."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Minimize Overuse"}),": Use input dialogs sparingly to avoid user frustration. Reserve them for actions requiring specific user input."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"styling",children:"Styling"}),"\n",(0,i.jsx)(t.h3,{id:"shadow-parts",children:"Shadow parts"}),"\n",(0,i.jsxs)(t.p,{children:["These are the various parts of the ",(0,i.jsx)(t.a,{href:"../../glossary#shadow-dom",children:"shadow DOM"})," for the component, which will be required when styling via CSS is desired."]}),"\n",(0,i.jsx)(r,{tag:n(7813).lG,table:"parts"}),"\n",(0,i.jsx)(t.h3,{id:"reflected-attributes",children:"Reflected attributes"}),"\n",(0,i.jsx)(t.p,{children:"The reflected attributes of a component will be shown as attributes in the rendered HTML element for the component in the DOM. This means that styling can be applied using these attributes."}),"\n",(0,i.jsx)(r,{tag:n(7813).lG,table:"reflects"})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}function h(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>a});var i=n(6540);const s={},o=i.createContext(s);function l(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(o.Provider,{value:t},e.children)}},7813:e=>{e.exports=JSON.parse('{"e7":"dwc-app-layout","$n":"dwc-button","Sc":"dwc-checkbox","D0":"dwc-field","Ap":"dwc-slider","qF":"dwc-listbox","tX":"dwc-choicebox","a3":"dwc-combobox","mD":"dwc-navigator","z2":"dwc-progressbar","a":"dwc-radio","TN":"dwc-tabbed-pane","_s":"dwc-drawer","lG":"dwc-dialog","In":"dwc-icon","O3":"dwc-splitter","az":"dwc-login"}')}}]);