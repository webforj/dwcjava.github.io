"use strict";(self.webpackChunkdwcj_documentation=self.webpackChunkdwcj_documentation||[]).push([[9018],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var o=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,u=r(e,["components","mdxType","originalType","parentName"]),d=p(n),h=i,m=d["".concat(s,".").concat(h)]||d[h]||c[h]||a;return n?o.createElement(m,l(l({ref:t},u),{},{components:n})):o.createElement(m,l({ref:t},u))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=d;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r.mdxType="string"==typeof e?e:i,l[1]=r;for(var p=2;p<a;p++)l[p]=n[p];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3674:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>a,metadata:()=>r,toc:()=>p});var o=n(7462),i=(n(7294),n(3905));const a={sidebar_position:10,title:"Layouts"},l=void 0,r={unversionedId:"controls/layouts",id:"controls/layouts",title:"Layouts",description:"The DWCJ provides tools for users to create a variety of layouts with built-in API methods. These tools are",source:"@site/docs/controls/layouts.md",sourceDirName:"controls",slug:"/controls/layouts",permalink:"/docs/controls/layouts",draft:!1,editUrl:"https://github.com/DwcJava/dwcjava.github.io/tree/website/docs/controls/layouts.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10,title:"Layouts"},sidebar:"tutorialSidebar",previous:{title:"Checkbox",permalink:"/docs/controls/checkbox"},next:{title:"Combo Box",permalink:"/docs/controls/combo-box"}},s={},p=[{value:"Horizontal Layout",id:"horizontal-layout",level:2},{value:"Positioning",id:"positioning",level:3},{value:"Wrapping",id:"wrapping",level:3},{value:"Flow",id:"flow",level:3},{value:"Gap",id:"gap",level:3}],u={toc:p};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The DWCJ provides tools for users to create a variety of layouts with built-in API methods. These tools are\nmade to be utilized fully in Java, and do not require the application of CSS outside of the Java API methods provided."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"The DWCJ's layout component follows the pattern of ",(0,i.kt)("a",{parentName:"p",href:"https://css-tricks.com/snippets/css/a-guide-to-flexbox/"},"CSS's flexbox layout"),". It is recommended\nto review this resource if you are unfamiliar with CSS flexbox.")),(0,i.kt)("p",null,"To create a basic FlexLayout control, implement code similar to the following:"),(0,i.kt)("h2",{id:"horizontal-layout"},"Horizontal Layout"),(0,i.kt)("p",null,"The horizontal layout option will add controls next to one another horizontally, or along the x-axis. Use the ",(0,i.kt)("inlineCode",{parentName:"p"},"setDirection()")," method with either\n",(0,i.kt)("inlineCode",{parentName:"p"},"FlexDirection.ROW")," (left to right) or ",(0,i.kt)("inlineCode",{parentName:"p"},"FlexDirection.ROW_REVERSE")," (right to left) to position items as they're added along the x-axis. "),(0,i.kt)("p",null,"Alternatively, use either the ",(0,i.kt)("inlineCode",{parentName:"p"},"horizontal()")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"horizontalReverse()")," option when calling the ",(0,i.kt)("inlineCode",{parentName:"p"},"create()")," method on a ",(0,i.kt)("inlineCode",{parentName:"p"},"FlexLayout")," object to configure this layout\nas the object is created."),(0,i.kt)("h3",{id:"positioning"},"Positioning"),(0,i.kt)("p",null,"Controls that are added horizontally can also be positioned both horizontally and vertically. Use the ",(0,i.kt)("inlineCode",{parentName:"p"},"setJustifyContent()")," method to position items horizontally, and the ",(0,i.kt)("inlineCode",{parentName:"p"},"setAlignment()")," method to configure vertical positioning. To modify the area around controls along the cross axis (y-axis for horizontal layouts), use the\n",(0,i.kt)("inlineCode",{parentName:"p"},"setAlignContent()")," method."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"setAlignment()")," method controls how items will display along the cross axis as a whole within the container, and is effective for single-line layouts."),(0,i.kt)("p",{parentName:"admonition"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"setAlignContent()")," methods controls the space around the cross axis, and will take effect only when a layout has multiple lines.  ")),(0,i.kt)("p",null,"These can also be configured when creating a ",(0,i.kt)("inlineCode",{parentName:"p"},"FlexLayout")," using the ",(0,i.kt)("inlineCode",{parentName:"p"},"justify()"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"align()")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"contentAlign()")," methods with their respective options."),(0,i.kt)("h3",{id:"wrapping"},"Wrapping"),(0,i.kt)("p",null,"To further customize the Flex Layout control, utilize the ",(0,i.kt)("inlineCode",{parentName:"p"},"setWrap()")," method to dictate how controls will behave once they are no longer able to fit on a single line."),(0,i.kt)("p",null,"When creating the layout, utilize the - ",(0,i.kt)("inlineCode",{parentName:"p"},"nowrap()")," (default), ",(0,i.kt)("inlineCode",{parentName:"p"},"wrap()")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"wrapReverse()")," methods to configure wrapping."),(0,i.kt)("h3",{id:"flow"},"Flow"),(0,i.kt)("p",null,"Flex flow, which is a combination of both the direction and the wrap properties, can be set using the ",(0,i.kt)("inlineCode",{parentName:"p"},"setFlow()")," method. "),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"To configure this property when creating the layout, use the proper directional and wrap methods. For example, to create a column wrap flow,\nuse the ",(0,i.kt)("inlineCode",{parentName:"p"},".vertical().wrap()")," methods.")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Code Snippet")),(0,i.kt)("h3",{id:"gap"},"Gap"),(0,i.kt)("p",null,"The gap property explicitly controls the minimum space between items. It applies that spacing only between items not on the outer edges. "),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"The gap property's behavior can be thought of as a minimum distance between - this property will only take effect if it is the largest calculated\nspace between items. If the space between items would otherwise be larger due to another calculated property, such as due to ",(0,i.kt)("inlineCode",{parentName:"p"},"setAlignContent(FlexContentAlignment.SPACE_BETWEEN)"),", then the gap property will be ignored.")),(0,i.kt)("p",null,"features two basic layout components: Vertical Layout and Horizontal Layout. As their names suggest, they render their contents vertically and horizontally, respectively. Components are shown in the order they are added to either layout."),(0,i.kt)("p",null,"Vertical Layout\nVertical Layout places components top-to-bottom in a column. By default, it has 100% width and undefined height, meaning its width is constrained by its parent component and its height is determined by the components it contains."),(0,i.kt)("p",null,"Open in a\nnew tab\nShow code\nComponents in a Vertical Layout can be aligned both vertically and horizontally."),(0,i.kt)("p",null,"Vertical Alignment\nYou can position components at the top, middle, or bottom. Alternatively, you can position components by specifying how a layout\u2019s excess space (if any) is distributed between them."),(0,i.kt)("p",null,"Open in a\nnew tab\nVertical alignment"),(0,i.kt)("p",null,"Show code\nValue\tDescription\nSTART (default)"),(0,i.kt)("p",null,"Positions items at the top."),(0,i.kt)("p",null,"CENTER"),(0,i.kt)("p",null,"Vertically centers items."),(0,i.kt)("p",null,"END"),(0,i.kt)("p",null,"Positions items at the bottom."),(0,i.kt)("p",null,"BETWEEN"),(0,i.kt)("p",null,"Available space is distributed evenly between items. No space is added before the first item, or after the last."),(0,i.kt)("p",null,"AROUND"),(0,i.kt)("p",null,"Available space is distributed evenly between items. The space before the first item, and after the last, is half of that between items."),(0,i.kt)("p",null,"EVENLY"),(0,i.kt)("p",null,"Available space is distributed evenly between items. The space before the first item, between items and after the last item is the same."),(0,i.kt)("p",null,"Horizontal Alignment\nComponents in a Vertical Layout can be left-aligned (default), centered, right-aligned or stretched horizontally."),(0,i.kt)("p",null,"Open in a\nnew tab\nHorizontal alignment"),(0,i.kt)("p",null,"Show code\nValue\tDescription\nSTART (default)"),(0,i.kt)("p",null,"Left-aligns (in left-to-right languages) or right-aligns (in right-to-left languages) items"),(0,i.kt)("p",null,"CENTER"),(0,i.kt)("p",null,"Horizontally centers items"),(0,i.kt)("p",null,"END"),(0,i.kt)("p",null,"Right-aligns (in left-to-right languages) or left-aligns (in right-to-left languages) items"),(0,i.kt)("p",null,"STRETCH"),(0,i.kt)("p",null,"Stretches items with undefined width horizontally"),(0,i.kt)("p",null,"It\u2019s also possible to horizontally align individual components, overriding the alignment set by the parent layout."),(0,i.kt)("p",null,"Open in a\nnew tab\nLayout alignment"),(0,i.kt)("p",null,"Item 1: alignment"),(0,i.kt)("p",null,"Show code\nHorizontal Layout\nHorizontal Layout places components side-by-side in a row. By default, it has undefined width and height, meaning its size is determined by the components it contains."),(0,i.kt)("p",null,"Open in a\nnew tab\nShow code\nLike Vertical Layout, Horizontal Layout enables both vertical and horizontal alignment of components."),(0,i.kt)("p",null,"Vertical Alignment\nYou can position components at the top, middle, or bottom. Items can alternatively be made to stretch vertically or be positioned along the layout\u2019s text baseline."),(0,i.kt)("p",null,"Open in a\nnew tab\nShow code\nValue\tDescription\nSTRETCH (default)"),(0,i.kt)("p",null,"Stretches items with undefined height horizontally"),(0,i.kt)("p",null,"START"),(0,i.kt)("p",null,"Positions items at the top of the layout"),(0,i.kt)("p",null,"CENTER"),(0,i.kt)("p",null,"Vertically centers items"),(0,i.kt)("p",null,"END"),(0,i.kt)("p",null,"Positions items at the bottom of the layout"),(0,i.kt)("p",null,"BASELINE"),(0,i.kt)("p",null,"Position items along the layout\u2019s (text) baseline."),(0,i.kt)("p",null,"It\u2019s also possible to vertically align individual components, overriding the alignment set by the parent layout."),(0,i.kt)("p",null,"Open in a\nnew tab\nShow code\nHorizontal Alignment\nComponents in a Horizontal Layout can be left-aligned, centered or right-aligned. Alternatively, you can position components by specifying how a layout\u2019s excess space is distributed between them."),(0,i.kt)("p",null,"Open in a\nnew tab\nShow code\nValue\tDescription\nSTART (default)"),(0,i.kt)("p",null,"Left-aligns (in left-to-right languages) or right-aligns (in right-to-left languages) items"),(0,i.kt)("p",null,"END"),(0,i.kt)("p",null,"Right-aligns (in left-to-right languages) or left-aligns (in right-to-left languages) items"),(0,i.kt)("p",null,"CENTER"),(0,i.kt)("p",null,"Horizontally centers items"),(0,i.kt)("p",null,"BETWEEN"),(0,i.kt)("p",null,"Available space is distributed evenly between items. No space is added before the first item, or after the last."),(0,i.kt)("p",null,"AROUND"),(0,i.kt)("p",null,"Available space is distributed evenly between items. The space before the first item, and after the last, is half of that between items."),(0,i.kt)("p",null,"EVENLY"),(0,i.kt)("p",null,"Available space is distributed evenly between items. The space before the first item, between items and after the last item is the same."),(0,i.kt)("p",null,"Spacing\nSpacing is used to create space between components in the same layout. Spacing can help prevent mis-clicks and distinguish content areas."),(0,i.kt)("p",null,"Open in a\nnew tab\nShow code\nFive different spacing theme variants are available:"),(0,i.kt)("p",null,"Open in a\nnew tab\nShow code\nTheme variant\tUsage recommendations\nspacing-xs"),(0,i.kt)("p",null,"Extra-small space between items"),(0,i.kt)("p",null,"spacing-s"),(0,i.kt)("p",null,"Small space between items"),(0,i.kt)("p",null,"spacing"),(0,i.kt)("p",null,"Medium space between items"),(0,i.kt)("p",null,"spacing-l"),(0,i.kt)("p",null,"Large space between items"),(0,i.kt)("p",null,"spacing-xl"),(0,i.kt)("p",null,"Extra-large space between items"),(0,i.kt)("p",null,"Padding\nPadding is the space between a layout\u2019s outer border and its content. Padding can help distinguish a layout\u2019s content from its surroundings. Padding is applied using the padding theme variant."),(0,i.kt)("p",null,"Open in a\nnew tab\nShow code\nMargin\nUse margin to create space around a layout."),(0,i.kt)("p",null,"Open in a\nnew tab\nShow code\nExpanding Items\nComponents can be made to expand and take up any excess space a layout may have."),(0,i.kt)("p",null,"Open in a\nnew tab\nShow code\nWhen multiple components expand, they do so relative to each other. For example, having two items with expand ratios of 2 and 1 results in the first item taking up twice as much of the available space as the second item."),(0,i.kt)("p",null,"Components\nBadge\nComponents\nBoard\nUpdated 2023-03-08\nEdit this page on GitHub\nWas this page helpful?\nLeave a comment or ask a question, or share your own code examples. You can also join the chat on Discord or ask questions on StackOverflow."),(0,i.kt)("p",null,"Online"))}c.isMDXComponent=!0}}]);