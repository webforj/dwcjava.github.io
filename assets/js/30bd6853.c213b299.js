"use strict";(self.webpackChunkdwcj_documentation=self.webpackChunkdwcj_documentation||[]).push([[3722],{832:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>d,toc:()=>r});var i=t(4848),s=t(8453);const o={title:"TabbedPane",slug:"tabbedpane"},a=void 0,d={id:"components/tabbed-pane",title:"TabbedPane",description:"The TabbedPane class provides a compact and organized way of displaying content that is divided into multiple sections, each associated with a Tab. Users can switch between these sections by clicking on the respective tabs, often labeled with text and/or icons. This class simplifies the creation of multifaceted interfaces where different content or forms need to be accessible but not simultaneously visible.",source:"@site/docs/components/tabbed-pane.md",sourceDirName:"components",slug:"/components/tabbedpane",permalink:"/docs/components/tabbedpane",draft:!1,unlisted:!1,editUrl:"https://github.com/webforj/webforj-docs/tree/website/docs/components/tabbed-pane.md",tags:[],version:"current",frontMatter:{title:"TabbedPane",slug:"tabbedpane"},sidebar:"documentationSidebar",previous:{title:"Splitter",permalink:"/docs/components/splitter"},next:{title:"Styling",permalink:"/docs/category/styling"}},c={},r=[{value:"Usages",id:"usages",level:2},{value:"Tabs",id:"tabs",level:2},{value:"Properties",id:"properties",level:3},{value:"<code>Tab</code> Manipulation",id:"tab-manipulation",level:2},{value:"Adding a Tab",id:"adding-a-tab",level:3},{value:"Inserting a Tab",id:"inserting-a-tab",level:3},{value:"Removing a Tab",id:"removing-a-tab",level:3},{value:"Tab/Component Association",id:"tabcomponent-association",level:3},{value:"Configuration and Layout",id:"configuration-and-layout",level:2},{value:"Swiping",id:"swiping",level:3},{value:"Tab Placement",id:"tab-placement",level:3},{value:"Alignment",id:"alignment",level:3},{value:"Border and Activity Indicator",id:"border-and-activity-indicator",level:3},{value:"Activation Modes",id:"activation-modes",level:3},{value:"Removal Options",id:"removal-options",level:3},{value:"Styling",id:"styling",level:2},{value:"Expanse and Theme",id:"expanse-and-theme",level:3},{value:"Shadow Parts",id:"shadow-parts",level:3},{value:"Slots",id:"slots",level:3},{value:"CSS Properties",id:"css-properties",level:3},{value:"Reflected Attributes",id:"reflected-attributes",level:3},{value:"Dependencies",id:"dependencies",level:3},{value:"Best Practices",id:"best-practices",level:2}];function l(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{ComponentDemo:o,DocChip:a,JavadocLink:d,TableBuilder:c}=n;return o||b("ComponentDemo",!0),a||b("DocChip",!0),d||b("JavadocLink",!0),c||b("TableBuilder",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a,{tooltipText:"This component will render with a shadow DOM, an API built into the browser that facilitates encapsulation.",label:"Shadow",component:"a",href:"../glossary#shadow-dom",target:"_blank",clickable:!0,iconName:"shadow"}),"\n",(0,i.jsx)(a,{tooltipText:"The name of the web component that will render in the DOM.",label:"dwc-tabbed-pane",clickable:!1,iconName:"code"}),"\n",(0,i.jsx)(d,{type:"foundation",location:"com/webforj/component/tabbedpane/TabbedPane",top:"true"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"TabbedPane"})," class provides a compact and organized way of displaying content that is divided into multiple sections, each associated with a ",(0,i.jsx)(n.code,{children:"Tab"}),". Users can switch between these sections by clicking on the respective tabs, often labeled with text and/or icons. This class simplifies the creation of multifaceted interfaces where different content or forms need to be accessible but not simultaneously visible."]}),"\n",(0,i.jsx)(n.h2,{id:"usages",children:"Usages"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"TabbedPane"})," class is a gives developers a powerful tool for organizing and presenting multiple tabs or sections within a UI. Here are some typical scenarios where you might utilize a ",(0,i.jsx)(n.code,{children:"TabbedPane"})," in your application:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Document Viewer"}),": Implementing a document viewer where each tab represents a different document or file. Users can easily switch between open documents for efficient multitasking."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Data Management:"}),": Utilize a ",(0,i.jsx)(n.code,{children:"TabbedPane"})," to organize data management tasks, for instance:"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Different dataset to be displayed in an application"}),"\n",(0,i.jsx)(n.li,{children:"Various user profiles can be displayed within separate tabs"}),"\n",(0,i.jsx)(n.li,{children:"Different profiles in a user management system"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Module Selection"}),": A ",(0,i.jsx)(n.code,{children:"TabbedPane"})," can represent different modules or sections. Each tab can encapsulate the functionalities of a specific module, enabling users to focus on one aspect of the application at a time."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Task Management"}),": Task management applications can use a ",(0,i.jsx)(n.code,{children:"TabbedPane"})," to represent various projects or tasks. Each tab could correspond to a specific project, allowing users to manage and track tasks separately."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Program Navigation"}),": Within an application that needs to run various programs, a ",(0,i.jsx)(n.code,{children:"TabbedPane"})," could:"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Serve as a sidebar which allows for different applications or programs to be run within a single application, such as what is shown in the ",(0,i.jsx)(n.a,{href:"/docs/components/app-layout",children:(0,i.jsx)(n.code,{children:"AppLayout"})})," template"]}),"\n",(0,i.jsx)(n.li,{children:"Create a top bar which can serve a similar purpose, or represent sub-applications within an already selected application."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"tabs",children:"Tabs"}),"\n",(0,i.jsx)(n.p,{children:"Tabs are UI elements that can be added to tabbed panes to organize and switch between different content views."}),"\n",(0,i.jsx)(n.admonition,{type:"important",children:(0,i.jsxs)(n.p,{children:["Tabs are not intended to be used as standalone components. They are meant to be used in conjunction with tabbed panes. This class is not a ",(0,i.jsx)(n.code,{children:"Component"})," and should not be used as such."]})}),"\n",(0,i.jsx)(n.h3,{id:"properties",children:"Properties"}),"\n",(0,i.jsxs)(n.p,{children:["Tabs are comprised of the following properties, which are then used when adding them in a ",(0,i.jsx)(n.code,{children:"TabbedPane"}),". These properties have getters and setters to facilitate customization within a ",(0,i.jsx)(n.code,{children:"TabbedPane"}),"."]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsxs)(n.strong,{children:["Key(",(0,i.jsx)(n.code,{children:"Object"}),")"]}),": Represents the unique identifier for the ",(0,i.jsx)(n.code,{children:"Tab"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsxs)(n.strong,{children:["Text(",(0,i.jsx)(n.code,{children:"String"}),")"]}),": The text that will be displayed as a title for the ",(0,i.jsx)(n.code,{children:"Tab"})," within the ",(0,i.jsx)(n.code,{children:"TabbedPane"}),". This is also referred to as the title via the ",(0,i.jsx)(n.code,{children:"getTitle()"})," and ",(0,i.jsx)(n.code,{children:"setTitle(String title)"})," methods."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsxs)(n.strong,{children:["Tooltip(",(0,i.jsx)(n.code,{children:"String"}),")"]}),": The tooltip text that is associated with the ",(0,i.jsx)(n.code,{children:"Tab"}),", which will be displayed when the cursor hovers over the ",(0,i.jsx)(n.code,{children:"Tab"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsxs)(n.strong,{children:["Enabled(",(0,i.jsx)(n.code,{children:"boolean"}),")"]}),": Represents whether the ",(0,i.jsx)(n.code,{children:"Tab"})," is currently enabled or not. Can be modified with the ",(0,i.jsx)(n.code,{children:"setEnabled(boolean enabled)"})," method."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsxs)(n.strong,{children:["Closeable(",(0,i.jsx)(n.code,{children:"boolean"}),")"]}),": Represents whether the ",(0,i.jsx)(n.code,{children:"Tab"})," can be closed. Can be modified with the ",(0,i.jsx)(n.code,{children:"setCloseable(boolean enabled)"})," method. This will add a close button on the ",(0,i.jsx)(n.code,{children:"Tab"})," which can be clicked on by the user, and fires a removal event. The     ",(0,i.jsx)(n.code,{children:"TabbedPane"})," component dictates how to handle the removal."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsxs)(n.strong,{children:["Slot(",(0,i.jsx)(n.code,{children:"Component"}),")"]}),":\r\nSlots provide flexible options for improving the capability of a ",(0,i.jsx)(n.code,{children:"Tab"}),". You can have icons, labels, loading spinners, clear/reset capability, avatar/profile pictures, and other beneficial components nested within a ",(0,i.jsx)(n.code,{children:"Tab"})," to further clarify intended meaning to users.\r\nYou can add a component to the ",(0,i.jsx)(n.code,{children:"prefix"})," slot of a ",(0,i.jsx)(n.code,{children:"Tab"})," during construction. Alternatively, you can use the ",(0,i.jsx)(n.code,{children:"setPrefixComponent()"})," and ",(0,i.jsx)(n.code,{children:"setSuffixComponent()"})," methods to insert various components before and after the displayed option within a ",(0,i.jsx)(n.code,{children:"Tab"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'TabbedPane pane = new TabbedPane();\r\npane.addTab(new Tab("Documents", TablerIcon.create("files")));\n'})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.h2,{id:"tab-manipulation",children:[(0,i.jsx)(n.code,{children:"Tab"})," Manipulation"]}),"\n",(0,i.jsxs)(n.p,{children:["Various methods exist to allow developers to add, insert, remove and manipulate various properties of ",(0,i.jsx)(n.code,{children:"Tab"})," elements within the ",(0,i.jsx)(n.code,{children:"TabbedPane"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"adding-a-tab",children:"Adding a Tab"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"addTab()"})," and ",(0,i.jsx)(n.code,{children:"add()"})," methods exist in different overloaded capacities to allow developers flexibility in adding new tabs to the ",(0,i.jsx)(n.code,{children:"TabbedPane"}),". Adding a ",(0,i.jsx)(n.code,{children:"Tab"})," will place it after any previously existing tabs."]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"addTab(String text)"})})," - Adds a ",(0,i.jsx)(n.code,{children:"Tab"})," to the ",(0,i.jsx)(n.code,{children:"TabbedPane"})," with the specified ",(0,i.jsx)(n.code,{children:"String"})," as the text of the ",(0,i.jsx)(n.code,{children:"Tab"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"addTab(Tab tab)"})})," - Adds the ",(0,i.jsx)(n.code,{children:"Tab"})," provided  as a parameter to the ",(0,i.jsx)(n.code,{children:"TabbedPane"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"addTab(String text, Component component)"})})," - Adds a ",(0,i.jsx)(n.code,{children:"Tab"})," with the given ",(0,i.jsx)(n.code,{children:"String"})," as the text of the ",(0,i.jsx)(n.code,{children:"Tab"}),", and the provided ",(0,i.jsx)(n.code,{children:"Component"})," displayed in the content section of the ",(0,i.jsx)(n.code,{children:"TabbedPane"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"addTab(Tab tab, Component component)"})})," - Adds the provided ",(0,i.jsx)(n.code,{children:"Tab"})," and displays the provided ",(0,i.jsx)(n.code,{children:"Component"})," in the content section of the ",(0,i.jsx)(n.code,{children:"TabbedPane"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"add(Component... component)"})})," - Adds one or more ",(0,i.jsx)(n.code,{children:"Component"})," instances to the ",(0,i.jsx)(n.code,{children:"TabbedPane"}),", creating a discrete ",(0,i.jsx)(n.code,{children:"Tab"})," for each one, with the text being set to the name of the ",(0,i.jsx)(n.code,{children:"Component"})]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"add(Component... component)"})," determines the name of the passed ",(0,i.jsx)(n.code,{children:"Component"})," by calling the ",(0,i.jsx)(n.code,{children:"component.getName()"})," on the passed argument."]})}),"\n",(0,i.jsx)(n.h3,{id:"inserting-a-tab",children:"Inserting a Tab"}),"\n",(0,i.jsxs)(n.p,{children:["In addition to adding a ",(0,i.jsx)(n.code,{children:"Tab"})," at the end of the existing tabs, it is also possible to create a new one at a designated position. To do this, multiple overloaded versions of the ",(0,i.jsx)(n.code,{children:"insertTab()"}),"."]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"insertTab(int index, String text)"})})," - Inserts a ",(0,i.jsx)(n.code,{children:"Tab"})," into the ",(0,i.jsx)(n.code,{children:"TabbedPane"})," at the given index with the specified ",(0,i.jsx)(n.code,{children:"String"})," as the text of the ",(0,i.jsx)(n.code,{children:"Tab"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"insertTab(int index, Tab tab)"})})," - Inserts the ",(0,i.jsx)(n.code,{children:"Tab"})," provided as a parameter to the ",(0,i.jsx)(n.code,{children:"TabbedPane"})," at the specified index."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"insertTab(int index, String text, Component component)"})})," - Inserts a ",(0,i.jsx)(n.code,{children:"Tab"})," with the given ",(0,i.jsx)(n.code,{children:"String"})," as the text of the ",(0,i.jsx)(n.code,{children:"Tab"}),", and the provided ",(0,i.jsx)(n.code,{children:"Component"})," displayed in the content section of the ",(0,i.jsx)(n.code,{children:"TabbedPane"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"insertTab(int index, Tab tab, Component component)"})})," - Inserts the provided ",(0,i.jsx)(n.code,{children:"Tab"})," and displays the provided ",(0,i.jsx)(n.code,{children:"Component"})," in the content section of the ",(0,i.jsx)(n.code,{children:"TabbedPane"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"removing-a-tab",children:"Removing a Tab"}),"\n",(0,i.jsxs)(n.p,{children:["To remove a single ",(0,i.jsx)(n.code,{children:"Tab"})," from the ",(0,i.jsx)(n.code,{children:"TabbedPane"}),", use one of the following methods:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"removeTab(Tab tab)"})})," - Removes a ",(0,i.jsx)(n.code,{children:"Tab"})," from the ",(0,i.jsx)(n.code,{children:"TabbedPane"})," by passing the Tab instance to be removed."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"removeTab(int index)"})})," - Removes a ",(0,i.jsx)(n.code,{children:"Tab"})," from the ",(0,i.jsx)(n.code,{children:"TabbedPane"})," by specifying the\r\nindex of the ",(0,i.jsx)(n.code,{children:"Tab"})," to be removed."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["In addition to the two above methods for removal of a single ",(0,i.jsx)(n.code,{children:"Tab"}),", use the ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"removeAllTabs()"})})," method to clear the ",(0,i.jsx)(n.code,{children:"TabbedPane"})," of all tabs."]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"remove()"})," and ",(0,i.jsx)(n.code,{children:"removeAll()"})," methods do not remove tabs within the component."]})}),"\n",(0,i.jsx)(n.h3,{id:"tabcomponent-association",children:"Tab/Component Association"}),"\n",(0,i.jsxs)(n.p,{children:["To change the ",(0,i.jsx)(n.code,{children:"Component"})," to be displayed for a given ",(0,i.jsx)(n.code,{children:"Tab"}),", call the ",(0,i.jsx)(n.code,{children:"setComponentFor()"})," method, and pass either the instance of the ",(0,i.jsx)(n.code,{children:"Tab"}),", or the index of that Tab within the ",(0,i.jsx)(n.code,{children:"TabbedPane"}),"."]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["If this method is used on a ",(0,i.jsx)(n.code,{children:"Tab"})," that is already associated with a ",(0,i.jsx)(n.code,{children:"Component"}),", the previously associated ",(0,i.jsx)(n.code,{children:"Component"})," will be destroyed."]})}),"\n",(0,i.jsx)(n.h2,{id:"configuration-and-layout",children:"Configuration and Layout"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"TabbedPane"})," class has two constituent parts: a ",(0,i.jsx)(n.code,{children:"Tab"})," that is displayed in a specified location, and a component to be displayed. This can be a single component, or a ",(0,i.jsx)(n.a,{href:"../building-ui/composite-components",children:(0,i.jsx)(n.code,{children:"Composite"})})," component, allowing for the display of more complex components within a tab's content section."]}),"\n",(0,i.jsx)(n.h3,{id:"swiping",children:"Swiping"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"TabbedPane"})," supports navigating through the various tabs via swiping. This is ideal for a mobile application, but can also be configured via a built-in method to support mouse swiping. Both swiping and mouse swipping are disabled by default, but can be enabled with the ",(0,i.jsx)(n.code,{children:"setSwipable(boolean)"})," and ",(0,i.jsx)(n.code,{children:"setSwipableWithMouse(boolean)"})," methods, respectively."]}),"\n",(0,i.jsx)(n.h3,{id:"tab-placement",children:"Tab Placement"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"Tabs"})," within a ",(0,i.jsx)(n.code,{children:"TabbedPane"})," can be placed in various positions within the component based on the application developers preference. Provided options are set using the provided enum, which has the values of ",(0,i.jsx)(n.code,{children:"TOP"}),", ",(0,i.jsx)(n.code,{children:"BOTTOM"}),", ",(0,i.jsx)(n.code,{children:"LEFT"}),", ",(0,i.jsx)(n.code,{children:"RIGHT"}),", or ",(0,i.jsx)(n.code,{children:"HIDDEN"}),". The default setting is ",(0,i.jsx)(n.code,{children:"TOP"}),"."]}),"\n",(0,i.jsx)(o,{path:"https://demo.webforj.com/webapp/controlsamples/tabbedpaneplacement?",javaE:"https://raw.githubusercontent.com/webforj/webforj-docs-samples/refs/heads/main/src/main/java/com/webforj/samples/views/tabbedpane/TabbedPanePlacementView.java",height:"400px"}),"\n",(0,i.jsx)(n.h3,{id:"alignment",children:"Alignment"}),"\n",(0,i.jsxs)(n.p,{children:["In addition to changing the placement of the ",(0,i.jsx)(n.code,{children:"Tab"})," elements within the ",(0,i.jsx)(n.code,{children:"TabbedPane"}),", it is also possible to configure how the tabs will align within the component. By default, the setting ",(0,i.jsx)(n.code,{children:"AUTO"})," is in effect, which allows the placement of the tabs to dictate their alignment."]}),"\n",(0,i.jsxs)(n.p,{children:["The other options are ",(0,i.jsx)(n.code,{children:"START"}),", ",(0,i.jsx)(n.code,{children:"END"}),", ",(0,i.jsx)(n.code,{children:"CENTER"}),", and ",(0,i.jsx)(n.code,{children:"STRETCH"}),". The first three describe the position relative to the component, with ",(0,i.jsx)(n.code,{children:"STRETCH"})," making the tabs fill the available space."]}),"\n",(0,i.jsx)(o,{path:"https://demo.webforj.com/webapp/controlsamples/tabbedpanealignment?",javaE:"https://raw.githubusercontent.com/webforj/webforj-docs-samples/refs/heads/main/src/main/java/com/webforj/samples/views/tabbedpane/TabbedPaneAlignmentView.java",height:"250px"}),"\n",(0,i.jsx)(n.h3,{id:"border-and-activity-indicator",children:"Border and Activity Indicator"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"TabbedPane"})," will have a border displayed for the tabs within it by default, placed dependant on which ",(0,i.jsx)(n.code,{children:"Placement"})," has been set. This border helps to visualize the space that the various tabs within the pane take up."]}),"\n",(0,i.jsxs)(n.p,{children:["When a ",(0,i.jsx)(n.code,{children:"Tab"})," is clicked on, by default, an activity indicator is displayed near that ",(0,i.jsx)(n.code,{children:"Tab"})," to help highlight which is the currently selected ",(0,i.jsx)(n.code,{children:"Tab"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Both of these options can be customized by a developer by changing the boolean values using the appropriate setter methods. To change whether or not the border is shown, the ",(0,i.jsx)(n.code,{children:"setBorderless(boolean)"})," method can be used, with ",(0,i.jsx)(n.code,{children:"true"})," hiding the border, and ",(0,i.jsx)(n.code,{children:"false"}),", the default value, displaying the border."]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["This border doesn't apply to the entirety of the ",(0,i.jsx)(n.code,{children:"TabbedPane"})," component, and merely serves as a separator between the tabs and the content of the component."]})}),"\n",(0,i.jsxs)(n.p,{children:["To set the visibility of the active indicator, the ",(0,i.jsx)(n.code,{children:"setHideActiveIndicator(boolean)"})," method can be used. Passing ",(0,i.jsx)(n.code,{children:"true"})," to this method will hide the active indicator beneath an active ",(0,i.jsx)(n.code,{children:"Tab"}),", whereas ",(0,i.jsx)(n.code,{children:"false"}),", the default, keeps the indicator displayed."]}),"\n",(0,i.jsx)(o,{path:"https://demo.webforj.com/webapp/controlsamples/tabbedpaneborder?",javaE:"https://raw.githubusercontent.com/webforj/webforj-docs-samples/refs/heads/main/src/main/java/com/webforj/samples/views/tabbedpane/TabbedPaneBorderView.java",height:"300px"}),"\n",(0,i.jsx)(n.h3,{id:"activation-modes",children:"Activation Modes"}),"\n",(0,i.jsxs)(n.p,{children:["For more fine-grained control over how the ",(0,i.jsx)(n.code,{children:"TabbedPane"})," behaves when being navigated by the keyboard, the ",(0,i.jsx)(n.code,{children:"Activation"})," mode can be set to specify how the component should behave."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"Auto"})}),": When set to auto, navigating tabs with the arrow keys will instantly show the corresponding tab component."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"Manual"})}),": When set to manual, the tab will receive focus but will not show until the user presses space or enter."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(o,{path:"https://demo.webforj.com/webapp/controlsamples/tabbedpaneactivation?",javaE:"https://raw.githubusercontent.com/webforj/webforj-docs-samples/refs/heads/main/src/main/java/com/webforj/samples/views/tabbedpane/TabbedPaneActivationView.java",height:"250px"}),"\n",(0,i.jsx)(n.h3,{id:"removal-options",children:"Removal Options"}),"\n",(0,i.jsxs)(n.p,{children:["Individual ",(0,i.jsx)(n.code,{children:"Tab"})," elements can be set to be closable. Closable tabs will have a close button added to the tab, which fires a close event when clicked. The ",(0,i.jsx)(n.code,{children:"TabbedPane"})," dictates how this behavior is handled."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"Manual"})}),": By default, removal is set to ",(0,i.jsx)(n.code,{children:"MANUAL"}),", which means that the event is fired, but it is up to the developer to handle this event in whatever way they choose."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"Auto"})}),": Alternatively, ",(0,i.jsx)(n.code,{children:"AUTO"})," can be used which will fire the event, and also remove the ",(0,i.jsx)(n.code,{children:"Tab"})," from the component for the developer, removing the need for the developer to implement this behavior manually."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"styling",children:"Styling"}),"\n",(0,i.jsx)(n.h3,{id:"expanse-and-theme",children:"Expanse and Theme"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"TabbedPane"})," comes with built-in ",(0,i.jsx)(n.code,{children:"Expanse"})," and ",(0,i.jsx)(n.code,{children:"Theme"})," options similar to other webforJ components. These can be used to quickly add styling that conveys various meaning to the end user without needing to style the component with CSS."]}),"\n",(0,i.jsx)(o,{path:"https://demo.webforj.com/webapp/controlsamples/tabbedpaneexpansetheme?",javaE:"https://raw.githubusercontent.com/webforj/webforj-docs-samples/refs/heads/main/src/main/java/com/webforj/samples/views/tabbedpane/TabbedPaneExpanseThemeView.java",height:"250px"}),"\n",(0,i.jsx)(n.h3,{id:"shadow-parts",children:"Shadow Parts"}),"\n",(0,i.jsxs)(n.p,{children:["These are the various parts of the ",(0,i.jsx)(n.a,{href:"../glossary#shadow-dom",children:"shadow DOM"})," for the component, which will be required when styling via CSS is desired."]}),"\n",(0,i.jsx)(c,{tag:t(7813).TN,table:"parts"}),"\n",(0,i.jsx)(n.h3,{id:"slots",children:"Slots"}),"\n",(0,i.jsxs)(n.p,{children:["Listed below are the slots available for utilization within the ",(0,i.jsx)(n.code,{children:"Button"})," component. These slots act as placeholders within the component that control where the children of a customized element should be inserted within the shadow tree."]}),"\n",(0,i.jsx)(c,{tag:t(7813).TN,table:"slots"}),"\n",(0,i.jsx)(n.h3,{id:"css-properties",children:"CSS Properties"}),"\n",(0,i.jsx)(n.p,{children:"These are the various CSS properties that are used in the component, with a short description of their use."}),"\n",(0,i.jsx)(c,{tag:t(7813).TN,table:"properties"}),"\n",(0,i.jsx)(n.h3,{id:"reflected-attributes",children:"Reflected Attributes"}),"\n",(0,i.jsx)(n.p,{children:"The reflected attributes of a component will be shown as attributes in the rendered HTML element for the component in the DOM. This means that styling can be applied using these attributes."}),"\n",(0,i.jsx)(c,{tag:t(7813).TN,table:"reflects"}),"\n",(0,i.jsx)(n.h3,{id:"dependencies",children:"Dependencies"}),"\n",(0,i.jsx)(n.p,{children:"This component relies on the following components - see the related article for more detailed styling information:"}),"\n",(0,i.jsx)(c,{tag:"dwc-tabbed-pane",table:"dependencies"}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(n.p,{children:["The following practices are recommended for utilizing the ",(0,i.jsx)(n.code,{children:"TabbedPane"})," within applications:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Logical Grouping"}),": Use tabs to logically group related content"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Each tab should represent a distinct category or functionality within your application"}),"\n",(0,i.jsx)(n.li,{children:"Group similar or logical tabs near one another"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Limited Tabs"}),": Avoid overwhelming users with too many tabs. Consider using a hierarchical structure or other navigation patterns where applicable for a clean interface"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Clear Labels"}),": Clearly label your Tabs for intuitive use"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Provide clear and concise labels for each tab"}),"\n",(0,i.jsx)(n.li,{children:"Labels should reflect the content or purpose, making it easy for users to understand"}),"\n",(0,i.jsx)(n.li,{children:"Utilize icons and distinct colors where applicable"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Keyboard Navigation"})," Use webforJ's ",(0,i.jsx)(n.code,{children:"TabbedPane"})," keyboard navigation support to make interaction with the ",(0,i.jsx)(n.code,{children:"TabbedPane"})," more seamless and intuitive for the end user"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default Tab"}),": If the default tab is not placed at the beginning of the ",(0,i.jsx)(n.code,{children:"TabbedPane"}),", consider setting this tab as default for essential or commonly used information."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}function b(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>d});var i=t(6540);const s={},o=i.createContext(s);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:n},e.children)}},7813:e=>{e.exports=JSON.parse('{"e7":"dwc-app-layout","$n":"dwc-button","Sc":"dwc-checkbox","D0":"dwc-field","Ap":"dwc-slider","qF":"dwc-listbox","tX":"dwc-choicebox","a3":"dwc-combobox","mD":"dwc-navigator","z2":"dwc-progressbar","a":"dwc-radio","TN":"dwc-tabbed-pane","_s":"dwc-drawer","lG":"dwc-dialog","In":"dwc-icon","O3":"dwc-splitter","az":"dwc-login"}')}}]);