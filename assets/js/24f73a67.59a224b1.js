"use strict";(self.webpackChunkdwcj_documentation=self.webpackChunkdwcj_documentation||[]).push([[5927],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},l=Object.keys(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=o.createContext({}),s=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=s(e.components);return o.createElement(c.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},k=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),k=s(n),d=a,x=k["".concat(c,".").concat(d)]||k[d]||h[d]||l;return n?o.createElement(x,r(r({ref:t},p),{},{components:n})):o.createElement(x,r({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,r=new Array(l);r[0]=k;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,r[1]=i;for(var s=2;s<l;s++)r[s]=n[s];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}k.displayName="MDXCreateElement"},3401:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var o=n(7462),a=(n(7294),n(3905));const l={sidebar_position:10},r="Checkbox",i={unversionedId:"controls/checkbox",id:"controls/checkbox",title:"Checkbox",description:"At a Glance",source:"@site/docs/controls/checkbox.md",sourceDirName:"controls",slug:"/controls/checkbox",permalink:"/docs/controls/checkbox",draft:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"Button",permalink:"/docs/controls/button"},next:{title:"Combo Box",permalink:"/docs/controls/combo-box"}},c={},s=[{value:"At a Glance",id:"at-a-glance",level:3},{value:"Checkbox Text",id:"checkbox-text",level:3},{value:"Horizontal Text Position",id:"horizontal-text-position",level:3},{value:"Expanses",id:"expanses",level:3},{value:"Sample Program",id:"sample-program",level:3}],p={toc:s};function h(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"checkbox"},"Checkbox"),(0,a.kt)("h3",{id:"at-a-glance"},"At a Glance"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parent Class"),(0,a.kt)("th",{parentName:"tr",align:null},"Interfaces"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"#"},"AbstractDwcControl")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("a",{parentName:"td",href:"#"},"HasReadOnly")),(0,a.kt)("li",null,(0,a.kt)("a",{parentName:"td",href:"#"},"HasFocus")),(0,a.kt)("li",null,(0,a.kt)("a",{parentName:"td",href:"#"},"HasTabTraversal")),(0,a.kt)("li",null,(0,a.kt)("a",{parentName:"td",href:"#"},"HasTextAlignment"))))))),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Methods"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("a",{parentName:"td",href:"#"},(0,a.kt)("inlineCode",{parentName:"a"},"ComboBox addItem(Object key, String item)"))),(0,a.kt)("li",null,(0,a.kt)("a",{parentName:"td",href:"#"},(0,a.kt)("inlineCode",{parentName:"a"},"HorizontalTextPosition getHorizontalTextPosition()"))),(0,a.kt)("li",null,(0,a.kt)("a",{parentName:"td",href:"#"},(0,a.kt)("inlineCode",{parentName:"a"},"Boolean isChecked()"))),(0,a.kt)("li",null,(0,a.kt)("a",{parentName:"td",href:"#"},(0,a.kt)("inlineCode",{parentName:"a"},"CheckBox setChecked(Boolean checked)"))),(0,a.kt)("li",null,(0,a.kt)("a",{parentName:"td",href:"#"},(0,a.kt)("inlineCode",{parentName:"a"},"CheckBox setExpanse(CheckBox.Expanse expanse)"))),(0,a.kt)("li",null,(0,a.kt)("a",{parentName:"td",href:"#"},(0,a.kt)("inlineCode",{parentName:"a"},"CheckBox setHorizontalTextPosition(CheckBox.HorizontalTextPosition position)")))))))),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Events"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("a",{parentName:"td",href:"#"},(0,a.kt)("inlineCode",{parentName:"a"},"CheckBox onChange(Consumer<CheckBoxChangeEvent> callback)")))))))),(0,a.kt)("h3",{id:"checkbox-text"},"Checkbox Text"),(0,a.kt)("p",null,"Check boxes can utilize the ",(0,a.kt)("inlineCode",{parentName:"p"},"setText(String foo)")," method, which will positioned near the check box according to the built-in ",(0,a.kt)("inlineCode",{parentName:"p"},"HorizontalTextPosition")," property which is detailed below. "),(0,a.kt)("h3",{id:"horizontal-text-position"},"Horizontal Text Position"),(0,a.kt)("p",null,"DWCJ checkboxes have built-in functionality to set text to be displayed either to the right or left of the box. By default, the text will be displayed to the right of the control. Show below\nare the two settings: ",(0,a.kt)("br",null)),(0,a.kt)("iframe",{loading:"lazy",src:"http://localhost:8888/webapp/dwcj_control_demos?class=org.dwcj.control_demos.checkboxdemos.CheckboxHorizontalText",style:{width:"100%"}}),(0,a.kt)("br",null),"Listed below are the current supported theme options for the button control:",(0,a.kt)("br",null),(0,a.kt)("br",null),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Chekbox Horizontal Text Positions"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("inlineCode",{parentName:"td"},"CheckBox.HorizontalTextPosition.LEFT")),(0,a.kt)("li",null,(0,a.kt)("inlineCode",{parentName:"td"},"CheckBox.HorizontalTextPosition.RIGHT"))))))),(0,a.kt)("br",null),"Positioning of the horizontal text is supported by use of a built-in enum class. To set the position, execute code similar to the following: ",(0,a.kt)("br",null),(0,a.kt)("br",null),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'import org.dwcj.controls.checkbox.CheckBox;\n\nCheckBox exampleCheckBox = new CheckBox();      //Creates a new checkbox\nexampleCheckBox.setText("This is demonstration text");      //Sets the text to be displayed by the checkbox\nexampleCheckBox.setHorizontalTextPosition(CheckBox.HorizontalTextPosition.RIGHT);      //Sets the text\' position to be to the right\n')),(0,a.kt)("h3",{id:"expanses"},"Expanses"),(0,a.kt)("p",null,"There are five checkbox expanses that are supported in the DWCJ which allow for quick styling without using CSS.\nBelow are the expanses supported for the checkbox control: ",(0,a.kt)("br",null)),(0,a.kt)("iframe",{loading:"lazy",src:"http://localhost:8888/webapp/dwcj_control_demos?class=org.dwcj.control_demos.checkboxdemos.CheckboxExpanseDemo",style:{width:"100%",height:"100px"}}),(0,a.kt)("br",null),"Listed below are the current supported expanse options for the checkbox control:",(0,a.kt)("br",null),(0,a.kt)("br",null),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Checkbox Expanses"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("inlineCode",{parentName:"td"},"CheckBox.Expanse.XSMALL")),(0,a.kt)("li",null,(0,a.kt)("inlineCode",{parentName:"td"},"CheckBox.Expanse.SMALL")),(0,a.kt)("li",null,(0,a.kt)("inlineCode",{parentName:"td"},"CheckBox.Expanse.MEDIUM")),(0,a.kt)("li",null,(0,a.kt)("inlineCode",{parentName:"td"},"CheckBox.Expanse.LARGE")),(0,a.kt)("li",null,(0,a.kt)("inlineCode",{parentName:"td"},"CheckBox.Expanse.XLARGE"))))))),(0,a.kt)("br",null),"Expanses are supported by use of a built-in enum class. To apply an expanse, execute code similar to the following: ",(0,a.kt)("br",null),(0,a.kt)("br",null),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'import org.dwcj.controls.checkbox.CheckBox;\n\nCheckBox exampleCheckBox = new CheckBox();      //Creates a new checkbox\nexampleCheckBox.setText("This is demonstration text");      //Sets the text to be displayed by the checkbox\nexampleCheckBox.setExpanse(CheckBox.Expanse.MEDIUM);     //Sets the checkbox\'s expanse to the medium size.\n')),(0,a.kt)("h3",{id:"sample-program"},"Sample Program"),(0,a.kt)("p",null,"This code snippet is a small demonstration program that will create two buttons, each of which has an event attached. The first button will display a modal window with the first and last name that have\nbeen entered into the text boxes, and the second button will clear any text within these boxes."),(0,a.kt)("iframe",{loading:"lazy",src:"http://localhost:8888/webapp/dwcj_control_demos?class=org.dwcj.control_demos.checkboxdemos.CheckboxDemo",style:{width:"300px",height:"200px"}}),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Show Code"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'    package org.dwcj.control_demos.checkboxdemos;\n\n    import org.dwcj.App;\n    import org.dwcj.controls.panels.AppPanel;\n    import org.dwcj.controls.checkbox.CheckBox;\n    import org.dwcj.controls.checkbox.events.CheckBoxChangeEvent;\n    import org.dwcj.exceptions.DwcAppInitializeException;\n\n\n    public class CheckboxDemo extends App{\n\n        @Override\n        public void run() throws DwcAppInitializeException {\n\n\n            AppPanel panel = new AppPanel();\n            panel.setStyle("display", "inline-grid");\n            panel.setStyle("grid-template-columns", "1fr");\n            panel.setStyle("padding", "10px");\n            panel.setStyle("gap", "50px");\n\n            CheckBox cb1 = new CheckBox();\n            cb1.setText("Checkbox 1").onChange(this::checkboxDisplay);\n            CheckBox cb2 = new CheckBox();\n            cb2.setText("Checkbox 2").onChange(this::checkboxDisplay);\n            CheckBox cb3 = new CheckBox();\n            cb3.setText("Checkbox 3").onChange(this::checkboxDisplay);\n\n            panel.add(cb1, cb2, cb3);\n\n        }\n\n        void checkboxDisplay(CheckBoxChangeEvent ev){\n            String name = ev.getControl().getText();\n            String isChecked = ev.getControl().isChecked() ? "on" : "off";\n            App.msgbox(name + " has been checked " + isChecked);\n        }\n\n    }\n\n'))))}h.isMDXComponent=!0}}]);