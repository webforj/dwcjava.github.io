"use strict";(self.webpackChunkdwcj_documentation=self.webpackChunkdwcj_documentation||[]).push([[2820],{6083:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>p,toc:()=>d});var i=t(5893),s=t(1151),o=t(7796),a=t(2665);const r={sidebar_position:0,title:"<bbj-inpute>",sidebar_class_name:"sidebar--item__hidden",slug:"inpute","// pagination_prev":null,"// pagination_next":null},c=void 0,p={id:"components/client-components/Inpute",title:"<bbj-inpute>",description:"This section outlines styling information for the `` component. This component is client side only - it cannot be instantiated on its own via the API, but may make up part of API components.",source:"@site/docs/components/client-components/Inpute.md",sourceDirName:"components/client-components",slug:"/components/client-components/inpute",permalink:"/docs/components/client-components/inpute",draft:!1,unlisted:!1,editUrl:"https://github.com/DwcJava/dwcjava.github.io/tree/website/docs/components/client-components/Inpute.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0,title:"<bbj-inpute>",sidebar_class_name:"sidebar--item__hidden",slug:"inpute","// pagination_prev":null,"// pagination_next":null},sidebar:"documentationSidebar",previous:{title:"<bbj-inpute-spinner>",permalink:"/docs/components/client-components/inpute-spinner"},next:{title:"<bbj-inputn-spinner>",permalink:"/docs/components/client-components/inputn-spinner"}},l={},d=[{value:"Shadow Parts",id:"shadow-parts",level:3},{value:"CSS Properties",id:"css-properties",level:3},{value:"Reflected Attributes",id:"reflected-attributes",level:3},{value:"Dependencies",id:"dependencies",level:3}];function h(e){const n={admonition:"admonition",code:"code",h3:"h3",p:"p",strong:"strong",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.Z,{tooltipText:"This component will render with a shadow DOM, an API built into the browser that facilitates encapsulation.",label:"Shadow",target:"_blank",clickable:!1,iconName:"shadow"}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.admonition,{title:"CLIENT COMPONENT",type:"info",children:(0,i.jsxs)(n.p,{children:["This section outlines styling information for the ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"<bbj-inpute>"})})," component. This component is ",(0,i.jsx)(n.strong,{children:"client side only"})," - it cannot be instantiated on its own via the API, but may make up part of API components."]})}),"\n",(0,i.jsx)(n.h3,{id:"shadow-parts",children:"Shadow Parts"}),"\n",(0,i.jsx)(n.p,{children:"These are the various parts of the shadow DOM for the component, which will be required when styling via CSS is desired."}),"\n",(0,i.jsx)(o.Z,{tag:"bbj-inpute",table:"parts"}),"\n",(0,i.jsx)(n.h3,{id:"css-properties",children:"CSS Properties"}),"\n",(0,i.jsx)(n.p,{children:"These are the various CSS properties that are used in the component, with a short description of their use."}),"\n",(0,i.jsx)(o.Z,{tag:"bbj-inpute",table:"properties"}),"\n",(0,i.jsx)(n.h3,{id:"reflected-attributes",children:"Reflected Attributes"}),"\n",(0,i.jsx)(n.p,{children:"The reflected attributes of a component will be shown as attributes in the rendered HTML element for the component in the DOM. This means that styling can be applied using these attributes."}),"\n",(0,i.jsx)(o.Z,{tag:"bbj-inpute",table:"reflects"}),"\n",(0,i.jsx)(n.h3,{id:"dependencies",children:"Dependencies"}),"\n",(0,i.jsx)(n.p,{children:"This component relies on the following components - see the related article for more detailed styling information:"}),"\n",(0,i.jsx)(o.Z,{tag:"bbj-inpute",table:"dependencies"})]})}function u(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);