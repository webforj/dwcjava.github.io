"use strict";(self.webpackChunkdwcj_documentation=self.webpackChunkdwcj_documentation||[]).push([[366],{8408:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var t=i(4848),r=i(8453),s=i(3514);const o={sidebar_position:1,title:"Routing"},a=void 0,c={id:"routing/overview",title:"Routing",description:"In modern web applications, routing refers to the process of managing navigation between different views or components based on the current URL or path. In webforJ, routing establishes a sophisticated framework for client-side navigation, where UI updates happen dynamically without requiring full page reloads, enhancing the performance of your app.",source:"@site/docs/routing/overview.md",sourceDirName:"routing",slug:"/routing/overview",permalink:"/docs/routing/overview",draft:!1,unlisted:!1,editUrl:"https://github.com/webforj/webforj-docs/tree/website/docs/routing/overview.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Routing"},sidebar:"documentationSidebar",previous:{title:"Hello World",permalink:"/docs/getting-started/templates/hello-world"},next:{title:"Routable Apps",permalink:"/docs/routing/routable-apps"}},l={},d=[{value:"Traditional vs client-side routing",id:"traditional-vs-client-side-routing",level:3},{value:"Core principles",id:"core-principles",level:3},{value:"Example of client-side routing in webforJ",id:"example-of-client-side-routing-in-webforj",level:3}];function h(e){const n={code:"code",h1:"h1",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["In modern web applications, ",(0,t.jsx)(n.strong,{children:"routing"})," refers to the process of managing navigation between different views or components based on the current URL or path. In webforJ, routing establishes a sophisticated framework for ",(0,t.jsx)(n.strong,{children:"client-side navigation"}),", where UI updates happen dynamically without requiring full page reloads, enhancing the performance of your app."]}),"\n",(0,t.jsx)(n.h3,{id:"traditional-vs-client-side-routing",children:"Traditional vs client-side routing"}),"\n",(0,t.jsx)(n.p,{children:"In traditional server-side routing, when a user clicks a link, the browser sends a request to the server for a new document. The server responds by sending a fresh HTML page, which forces the browser to re-evaluate CSS and JavaScript, re-render the entire document, and reset the app state. This cycle introduces delays and inefficiencies, as the browser must reload resources and the page state. The process typically involves:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Request"}),": The user navigates to a new URL, triggering a request to the server."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Response"}),": The server sends back a new HTML document along with related assets (CSS, JS)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Rendering"}),": The browser re-renders the entire page, often losing the state of previously loaded pages."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This approach can lead to performance bottlenecks and suboptimal user experiences due to repeated full-page reloads."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Client-Side Routing"})," in webforJ solves this by enabling navigation directly in the browser, dynamically updating the UI without sending a new request to the server. Here's how it works:"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Single Initial Request"}),": The browser loads the app once, including all required assets (HTML, CSS, JavaScript)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"URL Management"}),": The router listens for URL changes and updates the view based on the current route."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Dynamic Component Rendering"}),": The router maps the URL to a component and renders it dynamically, without refreshing the page."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"State Preservation"}),": The state of the app is maintained between navigations, ensuring smooth transition between views."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["This design enables ",(0,t.jsx)(n.strong,{children:"deep linking"})," and ",(0,t.jsx)(n.strong,{children:"URL-driven state management"}),", allowing users to bookmark and share specific pages within the app while enjoying a smooth, single-page experience."]}),"\n",(0,t.jsx)(n.h3,{id:"core-principles",children:"Core principles"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"URL-Based Component Mapping"}),": In webforJ, routes are directly tied to UI components. A URL pattern is mapped to a specific component, dictating what content is displayed based on the current path."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Declarative Routing"}),": Routes are defined declaratively, typically using annotations. Each route corresponds to a component that is rendered when the route is matched."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Dynamic Navigation"}),": The router dynamically switches between views without reloading the page, keeping the app responsive and fast."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"example-of-client-side-routing-in-webforj",children:"Example of client-side routing in webforJ"}),"\n",(0,t.jsxs)(n.p,{children:["Here\u2019s an example of defining a route for a ",(0,t.jsx)(n.code,{children:"UserProfileView"})," component to display user details based on the ",(0,t.jsx)(n.code,{children:"id"})," parameter in the URL:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@Route(value = "user/:id")\npublic class UserProfileView extends Composite<Div> implements DidEnterObserver {\n\n  @Override\n  public void onDidEnter(DidEnterEvent event, ParametersBag parameters) {\n    String id = parameters.getAlpha("id").orElse("");\n    refreshProfile(id);\n  }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"In this setup:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Navigating to ",(0,t.jsx)(n.code,{children:"/user/john"})," would render the ",(0,t.jsx)(n.code,{children:"UserProfileView"})," component."]}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"id"})," parameter would capture ",(0,t.jsx)(n.code,{children:"john"})," from the URL and allow you to use it within the component to fetch and display user data."]}),"\n"]}),"\n",(0,t.jsx)(n.h1,{id:"topics",children:"Topics"}),"\n",(0,t.jsx)(s.A,{className:"topics-section"})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},3514:(e,n,i)=>{i.d(n,{A:()=>x});i(6540);var t=i(53),r=i(4142),s=i(5489),o=i(6654),a=i(1312),c=i(1107);const l={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};var d=i(4848);function h(e){let{href:n,children:i}=e;return(0,d.jsx)(s.A,{href:n,className:(0,t.A)("card padding--lg",l.cardContainer),children:i})}function p(e){let{href:n,icon:i,title:r,description:s}=e;return(0,d.jsxs)(h,{href:n,children:[(0,d.jsxs)(c.A,{as:"h2",className:(0,t.A)("text--truncate",l.cardTitle),title:r,children:[i," ",r]}),s&&(0,d.jsx)("p",{className:(0,t.A)("text--truncate",l.cardDescription),title:s,children:s})]})}function u(e){let{item:n}=e;const i=(0,r.Nr)(n);return i?(0,d.jsx)(p,{href:i,icon:"\ud83d\uddc3\ufe0f",title:n.label,description:n.description??(0,a.T)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:n.items.length})}):null}function g(e){let{item:n}=e;const i=(0,o.A)(n.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",t=(0,r.cC)(n.docId??void 0);return(0,d.jsx)(p,{href:n.href,icon:i,title:n.label,description:n.description??t?.description})}function m(e){let{item:n}=e;switch(n.type){case"link":return(0,d.jsx)(g,{item:n});case"category":return(0,d.jsx)(u,{item:n});default:throw new Error(`unknown item type ${JSON.stringify(n)}`)}}function f(e){let{className:n}=e;const i=(0,r.$S)();return(0,d.jsx)(x,{items:i.items,className:n})}function x(e){const{items:n,className:i}=e;if(!n)return(0,d.jsx)(f,{...e});const s=(0,r.d1)(n);return(0,d.jsx)("section",{className:(0,t.A)("row",i),children:s.map(((e,n)=>(0,d.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,d.jsx)(m,{item:e})},n)))})}}}]);