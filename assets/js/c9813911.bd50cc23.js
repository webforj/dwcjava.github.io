"use strict";(self.webpackChunkdwcj_documentation=self.webpackChunkdwcj_documentation||[]).push([[1680],{2695:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>r});const i=JSON.parse('{"id":"introduction/basics","title":"App Basics","description":"Once webforJ and its dependencies are set up in your project, you\'re ready to create the app structure. This article will walk through the key elements of a basic webforJ app, specifically focusing on the Application and HomeView classes, which are the foundational classes in the webforj-archetype-hello-world starter project.","source":"@site/docs/introduction/basics.md","sourceDirName":"introduction","slug":"/introduction/basics","permalink":"/docs/introduction/basics","draft":false,"unlisted":false,"editUrl":"https://github.com/webforj/webforj-docs/tree/website/docs/introduction/basics.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"App Basics","sidebar_position":3,"pagination_next":null},"sidebar":"documentationSidebar","previous":{"title":"Getting Started","permalink":"/docs/introduction/getting-started"}}');var s=t(74848),o=t(28453);const a={title:"App Basics",sidebar_position:3,pagination_next:null},l=void 0,c={},r=[{value:"Main app class: <code>Application.java</code>",id:"main-app-class-applicationjava",level:2},{value:"Main view class: <code>HomeView.java</code>",id:"main-view-class-homeviewjava",level:2},{value:"Class declaration and annotations",id:"class-declaration-and-annotations",level:3},{value:"Component initialization",id:"component-initialization",level:3},{value:"Layout configuration",id:"layout-configuration",level:3},{value:"Adding components to the layout",id:"adding-components-to-the-layout",level:3},{value:"Styling the app",id:"styling-the-app",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["Once webforJ and its dependencies are set up in your project, you're ready to create the app structure. This article will walk through the key elements of a basic webforJ app, specifically focusing on the ",(0,s.jsx)(n.code,{children:"Application"})," and ",(0,s.jsx)(n.code,{children:"HomeView"})," classes, which are the foundational classes in the ",(0,s.jsx)(n.code,{children:"webforj-archetype-hello-world"})," starter project."]}),"\n",(0,s.jsxs)(n.h2,{id:"main-app-class-applicationjava",children:["Main app class: ",(0,s.jsx)(n.code,{children:"Application.java"})]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"Application"})," class serves as the entry point for your webforJ app, setting up essential configurations and routes. To start, notice the class's declaration and annotations."]}),"\n",(0,s.jsxs)(n.p,{children:["This class extends the core ",(0,s.jsx)(n.code,{children:"App"})," class from webforJ, making it recognizable as a webforJ app. Various annotations configure the app's theme, title, and routing."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Routify(packages = "com.samples.views")\n@AppTitle("webforJ Hello World")\n@StyleSheet("ws://app.css")\npublic class Application extends App {\n}\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"@Routify"}),": Specifies that webforJ should scan the ",(0,s.jsx)(n.code,{children:"com.samples.views"})," package for route components."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"@AppTitle"}),": Defines the title displayed on the app's browser tab."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"@StyleSheet"}),": Links an external CSS file, ",(0,s.jsx)(n.code,{children:"app.css"}),", allowing custom styling for the app."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The Application class doesn't contain any additional methods because the configurations are set through annotations, and webforJ handles the app initialization."}),"\n",(0,s.jsxs)(n.p,{children:["With ",(0,s.jsx)(n.code,{children:"Application.java"})," set up, the app is now configured with a title and routes pointing to the views package. Next, an overview of the ",(0,s.jsx)(n.code,{children:"HomeView"})," class gives insight into what's displayed when the app is run."]}),"\n",(0,s.jsxs)(n.h2,{id:"main-view-class-homeviewjava",children:["Main view class: ",(0,s.jsx)(n.code,{children:"HomeView.java"})]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"HomeView"})," class defines a simple view component that serves as the homepage for the app. It displays a field and a button that to greet the user's typed name."]}),"\n",(0,s.jsx)(n.h3,{id:"class-declaration-and-annotations",children:"Class declaration and annotations"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"HomeView"})," extends ",(0,s.jsx)(n.code,{children:"Composite<FlexLayout>"}),", which allows it to act as a reusable component composed of a ",(0,s.jsx)(n.a,{href:"../components/flex-layout",children:(0,s.jsx)(n.code,{children:"FlexLayout"})})," component. The ",(0,s.jsx)(n.a,{href:"../routing/overview",children:(0,s.jsx)(n.code,{children:'@Route("/")'})})," makes this the root route of the app."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Route("/")\npublic class HelloWorldView extends Composite<FlexLayout> {\n\n  private FlexLayout self = getBoundComponent();\n  private TextField hello = new TextField("What is your name?");\n  private Button btn = new Button("Say Hello");\n\n  public HelloWorldView(){\n    self.setDirection(FlexDirection.COLUMN);\n    self.setMaxWidth(300);\n    self.setStyle("margin", "1em auto");\n\n    btn.setTheme(ButtonTheme.PRIMARY)\n        .addClickListener(e -> \n          Toast.show("Welcome to webforJ Starter " + hello.getValue() + "!", Theme.GRAY));\n\n    self.add(hello, btn);\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"component-initialization",children:"Component initialization"}),"\n",(0,s.jsx)(n.p,{children:"Inside the class, several UI elements are initialized and declared:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'private FlexLayout self = getBoundComponent();\nprivate TextField hello = new TextField("What is your name?");\nprivate Button btn = new Button("Say Hello");\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"self"}),": The main layout component using ",(0,s.jsx)(n.a,{href:"../components/flex-layout",children:(0,s.jsx)(n.code,{children:"FlexLayout"})}),", configured as a container for the elements. This element uses the ",(0,s.jsx)(n.code,{children:"getBoundComponent()"})," method to store the main ",(0,s.jsx)(n.code,{children:"FlexLayout"})," the class contains."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"hello"}),": A ",(0,s.jsx)(n.a,{href:"../components/fields/textfield",children:(0,s.jsx)(n.code,{children:"TextField"})})," labeled ",(0,s.jsx)(n.code,{children:"What is your name?"})," for users to input their name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"btn"}),": A primary-styled ",(0,s.jsx)(n.a,{href:"../components/button",children:(0,s.jsx)(n.code,{children:"Button"})})," labeled ",(0,s.jsx)(n.code,{children:"Say Hello"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"layout-configuration",children:"Layout configuration"}),"\n",(0,s.jsxs)(n.p,{children:["The layout ",(0,s.jsx)(n.code,{children:"(self)"})," is configured with a few key style properties:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"FlexDirection.COLUMN"})," stacks the elements vertically."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"setMaxWidth(300)"})," restricts the width to 300 pixels for a compact layout."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:'setStyle("margin", "1em auto")'})," centers the layout with a margin around it."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"adding-components-to-the-layout",children:"Adding components to the layout"}),"\n",(0,s.jsxs)(n.p,{children:["Finally, the hello text field and btn button are added to the ",(0,s.jsx)(n.a,{href:"../components/flex-layout",children:(0,s.jsx)(n.code,{children:"FlexLayout"})})," container by calling ",(0,s.jsx)(n.code,{children:"self.add(hello, btn)"}),". This arrangement defines the view\u2019s structure, making the form both interactive and visually centered."]}),"\n",(0,s.jsx)(n.h2,{id:"styling-the-app",children:"Styling the app"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"styles.css"})," file provides custom styling for your webforJ app. This CSS file is referenced in the Application class using the ",(0,s.jsx)(n.a,{href:"../styling/getting-started#using-annotations",children:(0,s.jsx)(n.code,{children:"@StyleSheet"})})," annotation, which allows the app to apply styles to components within the app."]}),"\n",(0,s.jsxs)(n.p,{children:["This file is located in the ",(0,s.jsx)(n.code,{children:"resources/static"})," directory of the project, and can be referenced using the web server URL ",(0,s.jsx)(n.code,{children:"ws://app.css"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var i=t(96540);const s={},o=i.createContext(s);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);