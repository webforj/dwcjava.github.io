"use strict";(self.webpackChunkdwcj_documentation=self.webpackChunkdwcj_documentation||[]).push([[5923],{31154:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"components/option-dialogs/input","title":"Input","description":"An InputDialog is a modal dialog designed to prompt the user for input. The dialog blocks app execution until the user provides the input or closes the dialog.","source":"@site/docs/components/option-dialogs/input.md","sourceDirName":"components/option-dialogs","slug":"/components/option-dialogs/input","permalink":"/docs/components/option-dialogs/input","draft":false,"unlisted":false,"editUrl":"https://github.com/webforj/webforj-docs/tree/website/docs/components/option-dialogs/input.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"title":"Input"},"sidebar":"documentationSidebar","previous":{"title":"Confirm","permalink":"/docs/components/option-dialogs/confirm"},"next":{"title":"File Chooser","permalink":"/docs/components/option-dialogs/file-chooser"}}');var t=i(74848),o=i(28453);const r={sidebar_position:4,title:"Input"},l="Input Dialog",a={},d=[{value:"Usages",id:"usages",level:2},{value:"Types",id:"types",level:2},{value:"Input types",id:"input-types",level:3},{value:"Message type",id:"message-type",level:3},{value:"Result",id:"result",level:2},{value:"Default value",id:"default-value",level:2},{value:"Timeout",id:"timeout",level:2},{value:"Best practices",id:"best-practices",level:2}];function c(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components},{ComponentDemo:i,DocChip:s,JavadocLink:r}=n;return i||u("ComponentDemo",!0),s||u("DocChip",!0),r||u("JavadocLink",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"input-dialog",children:"Input Dialog"})}),"\n",(0,t.jsx)(s,{chip:"shadow"}),"\n",(0,t.jsx)(r,{type:"foundation",location:"com/webforj/component/optiondialog/InputDialog",top:"true"}),"\n",(0,t.jsxs)(n.p,{children:["An ",(0,t.jsx)(n.code,{children:"InputDialog"})," is a modal dialog designed to prompt the user for input. The dialog blocks app execution until the user provides the input or closes the dialog."]}),"\n",(0,t.jsx)(i,{path:"https://demo.webforj.com/webapp/controlsamples/inputdialogbasic?",javaE:"https://raw.githubusercontent.com/webforj/webforj-docs-samples/refs/heads/main/src/main/java/com/webforj/samples/views/optiondialog/input/InputDialogBasicView.java",height:"500px"}),"\n",(0,t.jsx)(n.h2,{id:"usages",children:"Usages"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"InputDialog"})," provides a way to request input from users, such as text, numbers, or other data, ensuring that they provide necessary information before proceeding."]}),"\n",(0,t.jsx)(n.h2,{id:"types",children:"Types"}),"\n",(0,t.jsx)(n.h3,{id:"input-types",children:"Input types"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"InputDialog"})," supports different types of input fields, allowing you to tailor the input method to your specific needs:"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TEXT"}),": A standard single-line text input."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"PASSWORD"}),": A password input field that hides the user's input."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"NUMBER"}),": A numeric input field."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"EMAIL"}),": An input field for email addresses."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"URL"}),": An input field for URLs."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"SEARCH"}),": A search text input field."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"DATE"}),": An input field for selecting dates."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TIME"}),": An input field for selecting time."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"DATETIME_LOCAL"}),": An input field for selecting local date and time."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"COLOR"}),": An input field for selecting a color."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"message-type",children:"Message type"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"InputDialog"})," supports the following message types. When you configures a type, The dialog displays an icon beside the message, and the dialog's theme updates according to the webforJ design system rules."]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"PLAIN"}),": Displays the message without an icon, using the default theme."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ERROR"}),": Displays an error icon next to the message with the error theme applied."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"QUESTION"}),": Displays a question mark icon beside the message, using the primary theme."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"WARNING"}),": Displays a warning icon next to the message with the warning theme applied."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"INFO"}),": Displays an info icon beside the message, using the info theme."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"In the following sample, The user is prompted to enter its password to access the app. If login fails, the user will prompted\nagain."}),"\n",(0,t.jsx)(i,{path:"https://demo.webforj.com/webapp/controlsamples/inputdialogtype?",javaE:"https://raw.githubusercontent.com/webforj/webforj-docs-samples/refs/heads/main/src/main/java/com/webforj/samples/views/optiondialog/input/InputDialogTypeView.java",height:"350px"}),"\n",(0,t.jsx)(n.h2,{id:"result",children:"Result"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"InputDialog"})," returns the user's input as a string. If the user closes the dialog without providing input, the result will be ",(0,t.jsx)(n.code,{children:"null"}),"."]}),"\n",(0,t.jsx)(n.admonition,{type:"important",children:(0,t.jsxs)(n.p,{children:["The resulting string will be returned from the ",(0,t.jsx)(n.code,{children:"show()"})," method, or the equivalent ",(0,t.jsx)(n.code,{children:"OptionDialog"})," method as shown below."]})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",metastring:"showLineNumbers",children:'String result = OptionDialog.showInputDialog(\n    "Please enter your age:", "Age Input", "", InputDialog.InputType.NUMBER);\n\nif (result != null) {\n    OptionDialog.showMessageDialog("You entered: " + result, "Input Received", "OK");\n} else {\n    OptionDialog.showMessageDialog("No input received", "Input Canceled", "OK");\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"default-value",children:"Default value"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"InputDialog"})," allows you to specify a default value that appears in the input field when the dialog is displayed. This can provide users with a suggestion or a previously entered value."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",metastring:"showLineNumbers",children:'InputDialog dialog = new InputDialog(\n    "Please enter your name:", "Name Input", "John Doe", InputDialog.InputType.TEXT);\nString result = dialog.show();\n'})}),"\n",(0,t.jsx)(n.h2,{id:"timeout",children:"Timeout"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"InputDialog"})," allows you to set a timeout duration after which the dialog automatically closes. This feature is useful for non-critical input requests or actions that don't require the user's immediate interaction."]}),"\n",(0,t.jsxs)(n.p,{children:["You can configure the timeout for the dialog using the ",(0,t.jsx)(n.code,{children:"setTimeout(int timeout)"})," method. The timeout duration is in seconds. If the specified time elapses without any user interaction, the dialog closes automatically."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",metastring:"showLineNumbers",children:'InputDialog dialog = new InputDialog(\n    "Please enter your name:", "Name Input", "John Doe");\ndialog.setTimeout(5);\nString result = dialog.show();\n\nOptionDialog.showMessageDialog(\n        "You entered: " + result, "Input Received", "OK", MessageDialog.MessageType.INFO);\n'})}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best practices"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Clear and Concise Prompts"}),": Ensure the prompt message clearly explains what information the user is being asked to provide."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Appropriate Input Types"}),": Choose input types that match the required data to ensure accurate and relevant user input."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Logical Default Values"}),": Set default values that provide useful suggestions or previous entries to streamline user input."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Judicious Use of Timeout"}),": Set timeouts for non-critical input requests, ensuring users have enough time to provide the required information."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Minimize Overuse"}),": Use input dialogs sparingly to avoid user frustration. Reserve them for actions requiring specific user input."]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}function u(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var s=i(96540);const t={},o=s.createContext(t);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);