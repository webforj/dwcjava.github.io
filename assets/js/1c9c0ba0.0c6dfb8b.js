"use strict";(self.webpackChunkdwcj_documentation=self.webpackChunkdwcj_documentation||[]).push([[2234],{56008:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>r,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"components/table/table","title":"Table","description":"The Table class is a versatile component designed for presenting tabular information in a structured and easily understandable manner. Optimized for handling large datasets with high performance, this component offers advanced visualization and a comprehensive suite of events for dynamic user engagement.","source":"@site/docs/components/table/table.md","sourceDirName":"components/table","slug":"/components/table/","permalink":"/docs/components/table/","draft":false,"unlisted":false,"editUrl":"https://github.com/webforj/webforj-docs/tree/website/docs/components/table/table.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Table"},"sidebar":"documentationSidebar","previous":{"title":"File Save","permalink":"/docs/components/option-dialogs/file-save"},"next":{"title":"Columns","permalink":"/docs/components/table/columns"}}');var s=a(74848),o=a(28453);const i={sidebar_position:1,title:"Table"},c=void 0,r={},l=[{value:"Creating a <code>Table</code>",id:"creating-a-table",level:2},{value:"1. Create an entity class",id:"1-create-an-entity-class",level:3},{value:"2. Create a repository",id:"2-create-a-repository",level:3},{value:"3. Instantiate <code>Table</code> and add columns",id:"3-instantiate-table-and-add-columns",level:3},{value:"4. Set the <code>Table</code> data",id:"4-set-the-table-data",level:3}];function d(e){const t={admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components},{ComponentDemo:a,DocChip:n,JavadocLink:i}=t;return a||h("ComponentDemo",!0),n||h("DocChip",!0),i||h("JavadocLink",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n,{chip:"shadow"}),"\n",(0,s.jsx)(n,{chip:"name",label:"dwc-table"}),"\n",(0,s.jsx)(i,{type:"table",location:"com/webforj/component/table/Table",top:"true"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"Table"})," class is a versatile component designed for presenting tabular information in a structured and easily understandable manner. Optimized for handling large datasets with high performance, this component offers advanced visualization and a comprehensive suite of events for dynamic user engagement."]}),"\n",(0,s.jsx)(a,{path:"https://demo.webforj.com/webapp/controlsamples/datatable?",javaE:"https://raw.githubusercontent.com/webforj/webforj-docs-samples/refs/heads/main/src/main/java/com/webforj/samples/views/table/DataTableView.java",urls:["https://raw.githubusercontent.com/webforj/webforj-docs-samples/refs/heads/main/src/main/java/com/webforj/samples/views/table/MusicRecord.java","https://raw.githubusercontent.com/webforj/webforj-docs-samples/refs/heads/main/src/main/java/com/webforj/samples/views/table/Service.java"],height:"600px"}),"\n",(0,s.jsxs)(t.h2,{id:"creating-a-table",children:["Creating a ",(0,s.jsx)(t.code,{children:"Table"})]}),"\n",(0,s.jsxs)(t.p,{children:["In order to create and populate a ",(0,s.jsx)(t.code,{children:"Table"})," in an application, the following steps can be taken:"]}),"\n",(0,s.jsx)(t.h3,{id:"1-create-an-entity-class",children:"1. Create an entity class"}),"\n",(0,s.jsx)(t.p,{children:"Define a class to represent the entities (data) you want to display in the table. In the example, this class is MusicRecord."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:"public class MusicRecord {\n    // Fields and methods to represent the attributes of each record\n}\n"})}),"\n",(0,s.jsx)(t.h3,{id:"2-create-a-repository",children:"2. Create a repository"}),"\n",(0,s.jsx)(t.p,{children:"Once an entity class has been created, use this to fill a collection of these entities with the desired data."}),"\n",(0,s.jsxs)(t.p,{children:["From this data, a ",(0,s.jsx)(t.code,{children:"Repository"})," needs to be created for use within the ",(0,s.jsx)(t.code,{children:"Table"}),". The ",(0,s.jsx)(t.code,{children:"CollectionRepository"})," class is provided to turn any valid Java collection into a usable ",(0,s.jsx)(t.code,{children:"Repository"}),", forgoing the need to implement your own ",(0,s.jsx)(t.code,{children:"Repository"})," class."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'List<MusicRecord> data = new Gson().fromJson(\n    Assets.contentOf(\n        Assets.resolveContextUrl("context://data/CDStore.json")\n    ), new TypeToken<List<MusicRecord>>() {}\n);\n\nCollectionRepository<MusicRecord> dataRepository = new CollectionRepository<>(data);\n'})}),"\n",(0,s.jsxs)(t.h3,{id:"3-instantiate-table-and-add-columns",children:["3. Instantiate ",(0,s.jsx)(t.code,{children:"Table"})," and add columns"]}),"\n",(0,s.jsxs)(t.p,{children:["Instantiate a new ",(0,s.jsx)(t.code,{children:"Table"})," object, and use one of the provided factory methods to add the desired columns to a newly created ",(0,s.jsx)(t.code,{children:"Table"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'Table<MusicRecord> table = new Table<>();\ntable.addColumn("Number", MusicRecord::getNumber);\ntable.addColumn("Title", MusicRecord::getTitle);\ntable.addColumn("Artist", MusicRecord::getArtist);\ntable.addColumn("Genre", MusicRecord::getMusicType);\ntable.addColumn("Cost", MusicRecord::getCost);\n'})}),"\n",(0,s.jsxs)(t.h3,{id:"4-set-the-table-data",children:["4. Set the ",(0,s.jsx)(t.code,{children:"Table"})," data"]}),"\n",(0,s.jsxs)(t.p,{children:["Finally, set the ",(0,s.jsx)(t.code,{children:"Repository"})," for the ",(0,s.jsx)(t.code,{children:"Table"})," created in the previous step:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:"table.setRepository(Service.getMusicRecords());\n"})}),"\n",(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsxs)(t.p,{children:["Alternatively, the ",(0,s.jsx)(t.code,{children:"setItems()"})," method can be passed any valid Java collection, which will create a ",(0,s.jsx)(t.code,{children:"CollectionRepository"})," under the hood for you."]})}),"\n",(0,s.jsxs)(t.p,{children:["Below is an example of the above steps implemented to create a basic ",(0,s.jsx)(t.code,{children:"Table"})," component:"]}),"\n",(0,s.jsx)(a,{path:"https://demo.webforj.com/webapp/controlsamples/tablebasic?",javaE:"https://raw.githubusercontent.com/webforj/webforj-docs-samples/refs/heads/main/src/main/java/com/webforj/samples/views/table/TableBasicView.java",urls:["https://raw.githubusercontent.com/webforj/webforj-docs-samples/refs/heads/main/src/main/java/com/webforj/samples/views/table/MusicRecord.java","https://raw.githubusercontent.com/webforj/webforj-docs-samples/refs/heads/main/src/main/java/com/webforj/samples/views/table/Service.java"],height:"600px"})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}function h(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},28453:(e,t,a)=>{a.d(t,{R:()=>i,x:()=>c});var n=a(96540);const s={},o=n.createContext(s);function i(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);