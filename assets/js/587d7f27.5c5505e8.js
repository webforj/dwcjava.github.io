"use strict";(self.webpackChunkdwcj_documentation=self.webpackChunkdwcj_documentation||[]).push([[4931],{9424:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>l});var t=o(7844),a=o(4848),i=o(8453);const s={title:"What's new in version 24.11?",description:"Get to know the features, fixes, and functionality new in webforJ version 24.11.",slug:"whats-new-v24.11",date:new Date("2024-09-05T00:00:00.000Z"),authors:[{name:"webforJ Team",url:"https://github.com/webforj",image_url:"/img/webforj_icon.svg"}],tags:["webforJ","v24.11","release"],image:"https://documentation.webforj.com/release_blog/_images/social-cover-24.11.png",hide_table_of_contents:!1},r="24.11",c={authorsImageUrls:[void 0]},l=[{value:"New features and enhancements \ud83c\udf89",id:"new-features-and-enhancements-",level:2},{value:"Using prefix and suffix slots",id:"using-prefix-and-suffix-slots",level:3},{value:"Icon overhaul",id:"icon-overhaul",level:3},{value:"Icons across multiple collections",id:"icons-across-multiple-collections",level:4},{value:"Adding a custom icon pool",id:"adding-a-custom-icon-pool",level:4},{value:"Icon button",id:"icon-button",level:4},{value:"Void asynchronous JavaScript execution",id:"void-asynchronous-javascript-execution",level:3},{value:"Using the <code>Page</code> for HTML event registration",id:"using-the-page-for-html-event-registration",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"cover image",src:o(5976).A+"",width:"1200",height:"630"})}),"\n",(0,a.jsx)(n.p,{children:"webforJ version 24.11 is live and available for development. Learn more about what main features and fixes are included in this release."}),"\n",(0,a.jsxs)(n.p,{children:["As always, see the ",(0,a.jsx)(n.a,{href:"https://github.com/webforj/webforj/releases/tag/24.11",children:"GitHub release overview"})," for a more comprehensive list of changes. Highlighted below are some of the most exciting changes:"]}),"\n",(0,a.jsx)(n.h2,{id:"new-features-and-enhancements-",children:"New features and enhancements \ud83c\udf89"}),"\n",(0,a.jsx)(n.p,{children:"The following new components, features, and enhancements to various existing behavior have been introduced in this release:"}),"\n",(0,a.jsx)(n.h3,{id:"using-prefix-and-suffix-slots",children:"Using prefix and suffix slots"}),"\n",(0,a.jsx)(n.p,{children:"In order to streamline the use of many webforJ components, additional API methods have been added which allow utilization of prefix and suffix slots in various components."}),"\n",(0,a.jsx)(n.p,{children:"These slots can be utilized in many different ways to best suit an app's behavior, such as adding icons, labels, loading spinners, clear/reset functionality, avatar/profile pictures, and many other useful behaviors."}),"\n",(0,a.jsx)(n.p,{children:"The following components have had API methods added to support this behavior:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"../../docs/components/button",children:"Button"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"../../docs/components/lists/choicebox",children:"ChoiceBox"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"../../docs/components/lists/combobox",children:"ComboBox"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"../../docs/components/tabbedpane",children:"TabbedPane"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"../../docs/components/fields",children:"All Field Types"})}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["To utilize these slots, getter and setter methods for prefix and suffix slots have been added. Below is an example for a ",(0,a.jsx)(n.a,{href:"../../docs/components/button",children:(0,a.jsx)(n.code,{children:"Button"})}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'FlexLayout layout = FlexLayout.create().horizontal().build()\n   .setMargin("var(--dwc-space-m)");\n\nButton contact = new Button("Contact us", ButtonTheme.PRIMARY);\ncontact.setPrefixComponent(FeatherIcon.MAIL.create());\ncontact.onClick(e -> {\n showMessageDialog("Message has been sent!", "Sent Message");\n});\n\nlayout.add(contact);\n\nFrame mainFrame = new Frame();\nmainFrame.add(layout);\n'})}),"\n",(0,a.jsx)(n.h3,{id:"icon-overhaul",children:"Icon overhaul"}),"\n",(0,a.jsx)(n.p,{children:"With the addition of more fine-grained control over the slots of various components, the API of one of the most common use cases for slots has also been overhauled; icons now have a more streamlined and intuitive API for use within webforJ apps."}),"\n",(0,a.jsxs)(n.p,{children:["Use the new ",(0,a.jsx)(n.code,{children:"Icon"})," class to create an icon that can be added to a layout, or to a slot in a supporting component:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'FlexLayout layout = FlexLayout.create().horizontal().build()\n    .setMargin("var(--dwc-space-m)");\n    \nFrame mainFrame = new Frame();\n\nIcon image = FeatherIcon.IMAGE.create();\nIcon video = FeatherIcon.VIDEO.create();\nIcon music = FeatherIcon.MUSIC.create();\n\nlayout.add(image, video, music);\nmainFrame.add(layout);\n'})}),"\n",(0,a.jsx)(n.h4,{id:"icons-across-multiple-collections",children:"Icons across multiple collections"}),"\n",(0,a.jsxs)(n.p,{children:["The new update allows developers to mix and match icons from different collections. With support for the icon libraries included by default with webforJ - ",(0,a.jsx)(n.a,{href:"https://feathericons.com/",children:(0,a.jsx)(n.strong,{children:"Feather"})}),", ",(0,a.jsx)(n.a,{href:"https://tabler.io/icons",children:(0,a.jsx)(n.strong,{children:"Tabler"})}),", and ",(0,a.jsx)(n.a,{href:"https://fontawesome.com/icons",children:(0,a.jsx)(n.strong,{children:"FontAwesome"})})," - you can now select the perfect icon for your needs without being constrained to a single collection. This is especially useful for applications that require a variety of visual styles or specific icon designs."]}),"\n",(0,a.jsx)(n.p,{children:"To do this, use the factory methods provided to select the icon pool:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'FlexLayout layout = FlexLayout.create().horizontal().build()\n    .setMargin("var(--dwc-space-m)");\n\nFrame mainFrame = new Frame();\n\nIcon image = FeatherIcon.IMAGE.create();\nIcon video = TablerIcon.create("video");\nIcon music = FontAwesomeIcon.create("music", FontAwesomeIcon.Variate.SOLID);\n\nlayout.add(image, video, music);\nmainFrame.add(layout);\n'})}),"\n",(0,a.jsx)(n.h4,{id:"adding-a-custom-icon-pool",children:"Adding a custom icon pool"}),"\n",(0,a.jsx)(n.p,{children:"Icon Pools, which allows developers to organize and manage icons more effectively. Icons can be stored in a centralized directory or a context path and accessed through a pool, simplifying the icon management process. You can create icon pools from directories using a full directory path, or a context path as shown below:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'IconPoolBuilder.fromDirectory("app-pool", "context://icons");\n\nFlexLayout layout = FlexLayout.create().horizontal().build()\n    .setMargin("var(--dwc-space-m)");\n\nFrame mainFrame = new Frame();\n\nIcon bell = new Icon("bell", "app-pool");\nIcon dribbble = new Icon("dribbble", "app-pool");\n\nlayout.add(bell, dribbble);\nmainFrame.add(layout);\n'})}),"\n",(0,a.jsx)(n.p,{children:"For developers looking for more integration of their custom icon pools, custom icon factories can now be created. This allows for defining reusable icon sets within an app, which makes creating your app more consistent and helps reduce maintenance across different components and modules."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"public enum AppPoolIcon implements IconFactory {\n    BELL, DRIBBBLE;\n\n    public Icon create() {\n        return new Icon(String.valueOf(this), this.getPool());\n    }\n\n    @Override\n    public String getPool() {\n        return \"app-pool\";\n    }\n\n    @Override\n    public String toString() {\n        return this.name().toLowerCase(Locale.ENGLISH).replace('_', '-');\n    }\n}\n"})}),"\n",(0,a.jsx)(n.h4,{id:"icon-button",children:"Icon button"}),"\n",(0,a.jsxs)(n.p,{children:["Finally, the ",(0,a.jsx)(n.code,{children:"IconButton"})," class has been added, and is ideal for actions that are best represented with just an icon, such as notifications or alerts."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'FlexLayout layout = FlexLayout.create().horizontal().build().setMargin("var(--dwc-space-m)");\n\nIconButton bell = new IconButton(FeatherIcon.BELL.create());\nbell.onClick(e -> showMessageDialog("You have a new message!", "Ding Dong!"));\n\nlayout.add(bell);\n\nFrame mainFrame = new Frame();\nmainFrame.add(layout);\n'})}),"\n",(0,a.jsx)(n.h3,{id:"void-asynchronous-javascript-execution",children:"Void asynchronous JavaScript execution"}),"\n",(0,a.jsxs)(n.p,{children:["With ",(0,a.jsx)(n.code,{children:"24.11"}),", it's now possible to asynchronously call a specified JavaScript function or execute provided JavaScript code without returning a result to the server. This can be done on a specific ",(0,a.jsx)(n.a,{href:"../../docs/building-ui/element",children:(0,a.jsx)(n.code,{children:"Element"})}),", or within the entire app by utilizing the ",(0,a.jsx)(n.code,{children:"Page"})," instance."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'Frame mainFrame = new Frame();\n/* Executes async JS at the page level, independent of a specific element */\nPage.getCurrent().executeJsVoidAsync("{console.log(\'Printing information to the console\')}");\n\n/* Adds a click listener to the button which can be invoked programmatically */\nElement button = new Element("button", "Display User");\nbutton.addEventListener("click", e -> {App.console().log("Button Clicked");});\n\n/* Will programmatically click the button */\nbutton.callJsFunctionVoidAsync("click");\nmainFrame.add(button);\n'})}),"\n",(0,a.jsxs)(n.h3,{id:"using-the-page-for-html-event-registration",children:["Using the ",(0,a.jsx)(n.code,{children:"Page"})," for HTML event registration"]}),"\n",(0,a.jsxs)(n.p,{children:["In addition to using the ",(0,a.jsx)(n.code,{children:"Page"})," class to execute JavaScript, support has been added to allow HTML events to be registered directly through the ",(0,a.jsx)(n.code,{children:"Page"})," instance, without needing to use a specific ",(0,a.jsx)(n.a,{href:"../../docs/building-ui/element",children:(0,a.jsx)(n.code,{children:"Element"})})," as a bridge. This is particularly useful when an event should execute page-wide, broadening the scope of capability."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'PageEventOptions pageEventOptions = new PageEventOptions();\npageEventOptions.addData("clientX", "event.clientX");\npageEventOptions.addData("clientY", "event.clientY");\nListenerRegistration<PageEvent> r1 = Page.getCurrent().addEventListener("click", e -> {\n  int x = (int) e.getData().get("clientX");\n  int y = (int) e.getData().get("clientY");\n\n  console().log("x: " + x + ", y: " + y);\n}, pageEventOptions);\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},5976:(e,n,o)=>{o.d(n,{A:()=>t});const t=o.p+"assets/images/24.11-27ceaff470aac8ca2a78e302aa308615.png"},8453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>r});var t=o(6540);const a={},i=t.createContext(a);function s(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(i.Provider,{value:n},e.children)}},7844:e=>{e.exports=JSON.parse('{"permalink":"/blog/whats-new-v24.11","source":"@site/blog/2024-09-05-webforj-v24.11/24.11.md","title":"What\'s new in version 24.11?","description":"Get to know the features, fixes, and functionality new in webforJ version 24.11.","date":"2024-09-05T00:00:00.000Z","tags":[{"inline":true,"label":"webforJ","permalink":"/blog/tags/webfor-j"},{"inline":true,"label":"v24.11","permalink":"/blog/tags/v-24-11"},{"inline":true,"label":"release","permalink":"/blog/tags/release"}],"readingTime":4.29,"hasTruncateMarker":true,"authors":[{"name":"webforJ Team","url":"https://github.com/webforj","image_url":"/img/webforj_icon.svg","imageURL":"/img/webforj_icon.svg","socials":{},"key":null,"page":null}],"frontMatter":{"title":"What\'s new in version 24.11?","description":"Get to know the features, fixes, and functionality new in webforJ version 24.11.","slug":"whats-new-v24.11","date":"2024-09-05T00:00:00.000Z","authors":[{"name":"webforJ Team","url":"https://github.com/webforj","image_url":"/img/webforj_icon.svg","imageURL":"/img/webforj_icon.svg"}],"tags":["webforJ","v24.11","release"],"image":"https://documentation.webforj.com/release_blog/_images/social-cover-24.11.png","hide_table_of_contents":false},"unlisted":false,"prevItem":{"title":"What\'s new in version 24.12?","permalink":"/blog/whats-new-v24.12"},"nextItem":{"title":"What\'s new in version 24.10?","permalink":"/blog/whats-new-24.10"}}')}}]);