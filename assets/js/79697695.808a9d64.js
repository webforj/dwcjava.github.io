"use strict";(self.webpackChunkdwcj_documentation=self.webpackChunkdwcj_documentation||[]).push([[6885],{283:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>r,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>d,toc:()=>c});var n=i(4848),s=i(8453);const o={sidebar_position:6,title:"TextField",slug:"textfield"},l=void 0,d={id:"components/fields/text-field",title:"TextField",description:"The TextField component allows users to enter and edit text in a single line. It can be configured to display a specific virtual keyboard, such as a numeric keypad, email input, telephone input, or URL input. The component also provides built-in validation to reject values that do not adhere to the specified type.",source:"@site/docs/components/fields/text-field.md",sourceDirName:"components/fields",slug:"/components/fields/textfield",permalink:"/docs/components/fields/textfield",draft:!1,unlisted:!1,editUrl:"https://github.com/webforj/webforj-docs/tree/website/docs/components/fields/text-field.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,title:"TextField",slug:"textfield"},sidebar:"documentationSidebar",previous:{title:"PasswordField",permalink:"/docs/components/fields/passwordfield"},next:{title:"TimeField",permalink:"/docs/components/fields/timefield"}},r={},c=[{value:"Usages",id:"usages",level:3},{value:"Types",id:"types",level:3},{value:"Placeholder Text",id:"placeholder-text",level:3},{value:"Selected Text",id:"selected-text",level:3},{value:"Best Practices",id:"best-practices",level:3}];function a(e){const t={code:"code",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{DocChip:i,JavadocLink:o,ParentLink:l}=t;return i||p("DocChip",!0),o||p("JavadocLink",!0),l||p("ParentLink",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i,{tooltipText:"This component will render with a shadow DOM, an API built into the browser that facilitates encapsulation.",label:"Shadow",component:"a",href:"../../glossary#shadow-dom",target:"_blank",clickable:!0,iconName:"shadow"}),"\n",(0,n.jsx)(i,{tooltipText:"The name of the web component that will render in the DOM.",label:"dwc-field",clickable:!1,iconName:"code"}),"\n",(0,n.jsx)(o,{type:"foundation",location:"com/webforj/component/field/TextField",top:"true"}),"\n",(0,n.jsx)(l,{parent:"Field"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"TextField"})," component allows users to enter and edit text in a single line. It can be configured to display a specific virtual keyboard, such as a numeric keypad, email input, telephone input, or URL input. The component also provides built-in validation to reject values that do not adhere to the specified type."]}),"\n",(0,n.jsx)(t.h3,{id:"usages",children:"Usages"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"TextField"})," is suitable for a wide range of scenarios where text input or editing is required. Here are some examples of when to use the ",(0,n.jsx)(t.code,{children:"TextField"}),":"]}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Form Inputs"}),": A ",(0,n.jsx)(t.code,{children:"TextField"})," is commonly used in forms for capturing user input, such as names, addresses, or comments. It is best to use a ",(0,n.jsx)(t.code,{children:"TextField"})," in these applications when the input is generally short enough to fit on one line."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Search Functionality"}),": ",(0,n.jsx)(t.code,{children:"TextField"})," can be used to provide a search box, allowing users to input search queries."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Text Editing"}),": A ",(0,n.jsx)(t.code,{children:"TextField"})," is ideal for applications that require text editing or content creation, such as document editors, chat applications, or note-taking apps."]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"types",children:"Types"}),"\n",(0,n.jsxs)(t.p,{children:["You can specify the type of the TextField using the ",(0,n.jsx)(t.code,{children:"setType"})," method. Similarly, the type can be retrieved using the ",(0,n.jsx)(t.code,{children:"getType"})," method, which will return an enum value."]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"Type.TEXT"}),": This is the default value for a ",(0,n.jsx)(t.code,{children:"TextField"}),", and automatically removes line breaks from the input value"]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"Type.EMAIL"}),": This configuration option is used for editing an email address. It has a relevant keyboard in supporting browsers and devices with dynamic keyboards."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"Type.TEL"}),": This option is used for entering a telephone number. The field will display a telephone keypad in some devices with dynamic keypads."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"Type.URL"}),": A field for entering a URL. It has a relevant keyboard in supporting browsers and devices with dynamic keyboards."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"Type.SEARCH"}),": A single-line text field for entering search strings. Line-breaks are automatically removed from the input value."]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"placeholder-text",children:"Placeholder Text"}),"\n",(0,n.jsxs)(t.p,{children:["You can set placeholder text for the ",(0,n.jsx)(t.code,{children:"TextField"})," using the ",(0,n.jsx)(t.code,{children:"setPlaceholder"})," method. The placeholder text is displayed when the field is empty, helping to prompt the user to enter appropriate input into the ",(0,n.jsx)(t.code,{children:"TextField"}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"selected-text",children:"Selected Text"}),"\n",(0,n.jsxs)(t.p,{children:["It is possible to interact with the ",(0,n.jsx)(t.code,{children:"TextField"})," class to retrieve a user's selected text, and to get information about the user's selection. You can retrieve the selected text in the ",(0,n.jsx)(t.code,{children:"TextField"})," using the ",(0,n.jsx)(t.code,{children:"getSelectedText"})," method. This behavior would commonly be used in conjunction with an event. Similarly, it is possible to retrieve the current selection range of the ",(0,n.jsx)(t.code,{children:"TextField"})," using the ",(0,n.jsx)(t.code,{children:"getSelectionRange"})," method. This returns a ",(0,n.jsx)(t.code,{children:"SelectionRange"})," object representing the start and end indices of the selected text."]}),"\n",(0,n.jsx)(t.h3,{id:"best-practices",children:"Best Practices"}),"\n",(0,n.jsxs)(t.p,{children:["The following section outlines some suggested best practices for utilization of the ",(0,n.jsx)(t.code,{children:"TextField"}),"."]}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Provide Clear Labels and Instructions"}),": Label the ",(0,n.jsx)(t.code,{children:"TextField"})," clearly to indicate the type of information users should enter. Consider providing additional instructional text or placeholder values to guide users and set expectations for the required input."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Spell Checking and Auto-Complete"}),": When applicable, consider utilizing spellcheck and/or autocomplete functionality to the ",(0,n.jsx)(t.code,{children:"TextField"}),". These features can help users input information faster and reduce errors by providing suggested values based on previous inputs or predefined options."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Consider Accessibility"}),": Utilize the ",(0,n.jsx)(t.code,{children:"TextField"})," component with accessibility in mind, adhering to accessibility standards such as proper labeling, keyboard navigation support, and compatibility with assistive technologies. Ensure that users with disabilities can interact with the ",(0,n.jsx)(t.code,{children:"TextField"})," effectively."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}function p(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},8453:(e,t,i)=>{i.d(t,{R:()=>l,x:()=>d});var n=i(6540);const s={},o=n.createContext(s);function l(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);