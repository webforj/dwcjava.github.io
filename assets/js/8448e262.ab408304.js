"use strict";(self.webpackChunkdwcj_documentation=self.webpackChunkdwcj_documentation||[]).push([[3994],{5415:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>d,toc:()=>a});var s=n(4848),i=n(8453);const r={sidebar_position:2,title:"Nested Routes"},o=void 0,d={id:"routing/route-hierarchy/nested-routes",title:"Nested Routes",description:"Nested routes allow child routes to be rendered within parent routes, creating a modular and reusable UI. Parent routes define shared components, while child routes are injected into specific outlets within these parent components.",source:"@site/docs/routing/route-hierarchy/nested-routes.md",sourceDirName:"routing/route-hierarchy",slug:"/routing/route-hierarchy/nested-routes",permalink:"/docs/routing/route-hierarchy/nested-routes",draft:!1,unlisted:!1,editUrl:"https://github.com/webforj/webforj-docs/tree/website/docs/routing/route-hierarchy/nested-routes.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Nested Routes"},sidebar:"documentationSidebar",previous:{title:"Route Types",permalink:"/docs/routing/route-hierarchy/route-types"},next:{title:"Route Outlets",permalink:"/docs/routing/route-hierarchy/route-outlets"}},c={},a=[{value:"Defining nested routes",id:"defining-nested-routes",level:2}];function l(e){const t={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"Nested routes allow child routes to be rendered within parent routes, creating a modular and reusable UI. Parent routes define shared components, while child routes are injected into specific outlets within these parent components."}),"\n",(0,s.jsx)(t.h2,{id:"defining-nested-routes",children:"Defining nested routes"}),"\n",(0,s.jsxs)(t.p,{children:["Nested routes are created using the ",(0,s.jsx)(t.code,{children:"outlet"})," parameter in the ",(0,s.jsx)(t.code,{children:"@Route"})," annotation, which establishes a parent-child relationship. The ",(0,s.jsx)(t.code,{children:"outlet"})," determines where the child component will be rendered within the parent route."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'@Route\npublic class MainLayout extends Composite<AppLayout> {\n  public MainLayout() {\n    setHeader();\n    setDrawer();\n  }\n}\n\n@Route(outlet = MainLayout.class)\npublic class DashboardView extends Composite<Div> {\n  public DashboardView() {\n    getBoundComponent().add(new H1("Dashboard Content"));\n  }\n}\n\n@Route(outlet = DashboardView.class)\npublic class SettingsView extends Composite<Div> {\n  public SettingsView() {\n    getBoundComponent().add(new H1("Settings Content"));\n  }\n}\n'})}),"\n",(0,s.jsx)(t.p,{children:"In this example:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"MainLayout"})," is a ",(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"./route-types#layout-routes",children:"Layout Route"})}),"."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"DashboardView"})," is a ",(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"./route-types#view-routes",children:"View Route"})})," nested inside ",(0,s.jsx)(t.code,{children:"MainLayout"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"SettingsView"})," is a ",(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"./route-types#view-routes",children:"View Route"})})," nested inside ",(0,s.jsx)(t.code,{children:"DashboardView"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["When navigating to ",(0,s.jsx)(t.code,{children:"/dashboard/settings"}),", the router:"]}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["Renders ",(0,s.jsx)(t.code,{children:"MainLayout"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:["Injects ",(0,s.jsx)(t.code,{children:"DashboardView"})," into the outlet of ",(0,s.jsx)(t.code,{children:"MainLayout"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:["Finally, injects ",(0,s.jsx)(t.code,{children:"SettingsView"})," into the outlet of ",(0,s.jsx)(t.code,{children:"DashboardView"}),"."]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"This hierarchical structure is reflected in the URL, where each segment represents a level in the component hierarchy:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"URL"}),": ",(0,s.jsx)(t.code,{children:"/dashboard/settings"})]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Hierarchy"}),":","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"MainLayout"}),": Layout Route"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"DashboardView"}),": View Route"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"SettingsView"}),": View Route"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"This structure ensures consistent shared UI components (such as headers or navigation menus) while allowing the content within those layouts to change dynamically."})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>d});var s=n(6540);const i={},r=s.createContext(i);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);