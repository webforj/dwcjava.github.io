"use strict";(self.webpackChunkdwcj_documentation=self.webpackChunkdwcj_documentation||[]).push([[2060],{3403:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>d,default:()=>l,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var o=n(4848),i=n(8453);const s={sidebar_position:10,title:"Editing and Refreshing",slug:"refreshing"},d=void 0,a={id:"components/table/table_edit_refresh",title:"Editing and Refreshing",description:'Editing data within the Table works via interaction with the Repository containing the data for the Table. The Repository serves as a bridge between the Table and the underlying dataset, offering methods for data retrieval, modification, and refreshing. Below is an example which implements behavior to edit the "Title" of a desired row based.',source:"@site/docs/components/table/table_edit_refresh.md",sourceDirName:"components/table",slug:"/components/table/refreshing",permalink:"/docs/components/table/refreshing",draft:!1,unlisted:!1,editUrl:"https://github.com/webforj/webforj-docs/tree/website/docs/components/table/table_edit_refresh.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10,title:"Editing and Refreshing",slug:"refreshing"},sidebar:"documentationSidebar",previous:{title:"Large Data Sets",permalink:"/docs/components/table/data"},next:{title:"Filtering",permalink:"/docs/components/table/filtering"}},r={},c=[{value:"Commit Method",id:"commit-method",level:3}];function h(e){const t={code:"code",h3:"h3",p:"p",...(0,i.R)(),...e.components},{ComponentDemo:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ComponentDemo",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["Editing data within the ",(0,o.jsx)(t.code,{children:"Table"})," works via interaction with the ",(0,o.jsx)(t.code,{children:"Repository"})," containing the data for the ",(0,o.jsx)(t.code,{children:"Table"}),". The ",(0,o.jsx)(t.code,{children:"Repository"})," serves as a bridge between the ",(0,o.jsx)(t.code,{children:"Table"}),' and the underlying dataset, offering methods for data retrieval, modification, and refreshing. Below is an example which implements behavior to edit the "Title" of a desired row based.']}),"\n",(0,o.jsx)(n,{path:"https://demo.webforj.com/webapp/controlsamples/tableeditdata?",javaE:"https://raw.githubusercontent.com/webforj/webforj-docs-samples/refs/heads/main/src/main/java/com/webforj/samples/views/table/TableEditDataView.java",urls:["https://raw.githubusercontent.com/webforj/webforj-docs-samples/refs/heads/main/src/main/java/com/webforj/samples/views/table/TitleEditorComponent.java"],height:"600px"}),"\n",(0,o.jsxs)(t.p,{children:["In the above example, the ",(0,o.jsx)(t.code,{children:"TitleEditorComponent"}),' class facilitates the editing of the "Title" field for a selected ',(0,o.jsx)(t.code,{children:"MusicRecord"}),'. The component includes an input field for the new title, along with "Save" and "Cancel" buttons.']}),"\n",(0,o.jsxs)(t.p,{children:["To connect the editing component with the ",(0,o.jsx)(t.code,{children:"Table"}),', an "Edit" button is added to the ',(0,o.jsx)(t.code,{children:"Table"})," via a ",(0,o.jsx)(t.code,{children:"VoidElementRenderer"}),". Clicking this button triggers the ",(0,o.jsx)(t.code,{children:"edit()"})," method of the ",(0,o.jsx)(t.code,{children:"TitleEditorComponent"}),', allowing users to modify the "Title".']}),"\n",(0,o.jsx)(t.h3,{id:"commit-method",children:"Commit Method"}),"\n",(0,o.jsxs)(t.p,{children:['Once the user modifies the title and clicks the "Save" button, the ',(0,o.jsx)(t.code,{children:"TitleEditorComponent"})," triggers the ",(0,o.jsx)(t.code,{children:"save()"})," method. This method updates the title of the corresponding ",(0,o.jsx)(t.code,{children:"MusicRecord"})," and dispatches a custom ",(0,o.jsx)(t.code,{children:"SaveEvent"}),"."]}),"\n",(0,o.jsxs)(t.p,{children:["The real-time update of data in the repository is achieved through the ",(0,o.jsx)(t.code,{children:"commit()"})," method. This method is employed within the ",(0,o.jsx)(t.code,{children:"onSave"})," event listener, ensuring that changes made through the editing component are reflected in the underlying dataset."]}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"commit()"})," method is called to notify all interested components that the data has been changed. The ",(0,o.jsx)(t.code,{children:"Table"})," catches the ",(0,o.jsx)(t.code,{children:"RepositoryCommitEvent"}),", and updates based on the new data."]})]})}function l(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>a});var o=n(6540);const i={},s=o.createContext(i);function d(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);